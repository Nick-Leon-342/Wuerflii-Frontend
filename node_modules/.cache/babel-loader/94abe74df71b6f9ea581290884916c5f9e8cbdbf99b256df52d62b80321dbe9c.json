{"ast":null,"code":"export let players = [];\nexport let gameAttributes;\n\n//____________________IDs____________________\n\nexport const id_upperTable = 'upperTable';\nexport const id_bottomTable = 'bottomTable';\nexport const id_playerTable = 'playerTable';\n\n//____________________Substrings____________________\n\nconst substring_players = 'players';\nconst substring_attributes = 'attributes';\nconst substring_finalScore = 'finalScore';\nconst substring_gnadenwurf = 'gnadenwurf';\nconst substring_offsetWidth = 'offsetWidth';\nconst substring_winner = 'winner';\nconst substring_gameSession = 'gameSession_';\n\n//____________________SessionStorage____________________\n\nconst substring_sessionStorage = 'kniffel_sessionStorage_';\nexport const sessionStorage_players = substring_sessionStorage + substring_players;\nexport const sessionStorage_attributes = substring_sessionStorage + substring_attributes;\nexport const sessionStorage_gnadenwurf = substring_sessionStorage + substring_gnadenwurf;\nexport const sessionStorage_offsetWidth = substring_sessionStorage + substring_offsetWidth;\nexport const sessionStorage_winner = substring_sessionStorage + substring_winner;\nexport const sessionStorage_upperTable_substring = substring_sessionStorage + id_upperTable + '_';\nexport const sessionStorage_bottomTable_substring = substring_sessionStorage + id_bottomTable + '_';\n\n//____________________ClearStorage____________________\n\nexport function clearSessionStorage() {\n  cSS(substring_sessionStorage);\n}\nexport function clearSessionStorageTables() {\n  cSS(sessionStorage_upperTable_substring);\n  cSS(sessionStorage_bottomTable_substring);\n}\nfunction cSS(substring) {\n  const sessionStorage_Keys = [];\n  for (let i = 0; i < sessionStorage.length; i++) {\n    sessionStorage_Keys.push(sessionStorage.key(i));\n  }\n  for (const key of sessionStorage_Keys) {\n    if (key.includes(substring)) {\n      sessionStorage.removeItem(key);\n    }\n  }\n}\n\n//____________________CreateObjects____________________\n\nexport const createPlayer = (name, alias, color) => {\n  return {\n    Name: name,\n    Alias: alias,\n    Color: color,\n    Wins: 0\n  };\n};\nexport const createAttributes = columns => {\n  return {\n    Columns: columns,\n    LastPlayed: new Date().toLocaleDateString(),\n    CreatedDate: new Date().toLocaleDateString(),\n    SessionName: ''\n  };\n};\nexport const createFinalScoreElement = scoreList => {\n  const finalScore = {\n    gamePlayed: new Date().toLocaleDateString()\n  };\n  for (let i = 0; i < players.length; i++) {\n    finalScore[players[i].Name] = scoreList[i];\n  }\n  return finalScore;\n};\n\n//____________________ResizeEvent____________________\n\nexport const resizeEvent = () => {\n  const a = document.getElementById('application');\n  const body = document.body;\n  if (a.offsetWidth >= window.innerWidth) {\n    body.style.justifyContent = 'left';\n    a.style.borderRadius = '0px';\n    a.style.marginTop = '10px';\n    a.style.marginBottom = '10px';\n  } else {\n    body.style.justifyContent = 'center';\n    a.style.borderRadius = '20px';\n    a.style.marginTop = '0px';\n    a.style.marginBottom = '0px';\n  }\n  if (a.offsetHeight >= window.innerHeight) {\n    body.style.height = '100%';\n  } else {\n    body.style.height = '100vh';\n  }\n};\nconst isTest = () => {\n  const parameter = new URLSearchParams(window.location.search).get('test');\n  return parameter === 'true';\n};\nfunction checkCredentials(name, password) {\n  return name !== '' && password !== '';\n}","map":{"version":3,"names":["players","gameAttributes","id_upperTable","id_bottomTable","id_playerTable","substring_players","substring_attributes","substring_finalScore","substring_gnadenwurf","substring_offsetWidth","substring_winner","substring_gameSession","substring_sessionStorage","sessionStorage_players","sessionStorage_attributes","sessionStorage_gnadenwurf","sessionStorage_offsetWidth","sessionStorage_winner","sessionStorage_upperTable_substring","sessionStorage_bottomTable_substring","clearSessionStorage","cSS","clearSessionStorageTables","substring","sessionStorage_Keys","i","sessionStorage","length","push","key","includes","removeItem","createPlayer","name","alias","color","Name","Alias","Color","Wins","createAttributes","columns","Columns","LastPlayed","Date","toLocaleDateString","CreatedDate","SessionName","createFinalScoreElement","scoreList","finalScore","gamePlayed","resizeEvent","a","document","getElementById","body","offsetWidth","window","innerWidth","style","justifyContent","borderRadius","marginTop","marginBottom","offsetHeight","innerHeight","height","isTest","parameter","URLSearchParams","location","search","get","checkCredentials","password"],"sources":["C:/Users/nickl/Desktop/Git Projects/kniffel/src/pages/utils.js"],"sourcesContent":["\r\n\r\nexport let players = [];\r\nexport let gameAttributes;\r\n\r\n\r\n\r\n//____________________IDs____________________\r\n\r\nexport const id_upperTable                         = 'upperTable';\r\nexport const id_bottomTable                        = 'bottomTable';\r\nexport const id_playerTable                        = 'playerTable';\r\n\r\n\r\n//____________________Substrings____________________\r\n\r\nconst substring_players                     = 'players';\r\nconst substring_attributes                  = 'attributes';\r\nconst substring_finalScore                  = 'finalScore';\r\n\r\nconst substring_gnadenwurf                  = 'gnadenwurf';\r\nconst substring_offsetWidth                 = 'offsetWidth';\r\nconst substring_winner                      = 'winner';\r\n\r\nconst substring_gameSession                 = 'gameSession_';\r\n\r\n\r\n//____________________SessionStorage____________________\r\n\r\nconst substring_sessionStorage                     = 'kniffel_sessionStorage_';\r\nexport const sessionStorage_players                = substring_sessionStorage + substring_players;\r\nexport const sessionStorage_attributes             = substring_sessionStorage + substring_attributes;\r\n\r\nexport const sessionStorage_gnadenwurf             = substring_sessionStorage + substring_gnadenwurf;\r\nexport const sessionStorage_offsetWidth            = substring_sessionStorage + substring_offsetWidth;\r\nexport const sessionStorage_winner                 = substring_sessionStorage + substring_winner;\r\n\r\nexport const sessionStorage_upperTable_substring   = substring_sessionStorage + id_upperTable + '_';\r\nexport const sessionStorage_bottomTable_substring  = substring_sessionStorage + id_bottomTable + '_';\r\n\r\n\r\n\r\n\r\n\r\n//____________________ClearStorage____________________\r\n\r\nexport function clearSessionStorage() {\r\n\r\n    cSS(substring_sessionStorage);\r\n\r\n}\r\n\r\nexport function clearSessionStorageTables() {\r\n\r\n    cSS(sessionStorage_upperTable_substring);\r\n    cSS(sessionStorage_bottomTable_substring);\r\n\r\n}\r\n\r\nfunction cSS(substring) {\r\n\r\n    const sessionStorage_Keys = [];\r\n\r\n    for(let i = 0; i < sessionStorage.length; i++) {sessionStorage_Keys.push(sessionStorage.key(i));}\r\n    \r\n    for(const key of sessionStorage_Keys) {\r\n        if (key.includes(substring)) {\r\n            sessionStorage.removeItem(key);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//____________________CreateObjects____________________\r\n\r\nexport const createPlayer = (name, alias, color) => {\r\n    return {\r\n        Name: name,\r\n        Alias: alias,\r\n        Color: color,\r\n        Wins: 0\r\n    };\r\n}\r\n\r\nexport const createAttributes = (columns) => {\r\n    return {\r\n        Columns: columns,\r\n        LastPlayed: new Date().toLocaleDateString(),\r\n        CreatedDate: new Date().toLocaleDateString(),\r\n        SessionName: ''\r\n    };\r\n}\r\n\r\nexport const createFinalScoreElement = (scoreList) => {\r\n\r\n    const finalScore = {\r\n        gamePlayed: new Date().toLocaleDateString()\r\n    };\r\n\r\n    for(let i = 0; i < players.length; i++) {\r\n        finalScore[players[i].Name] = scoreList[i];\r\n    }\r\n\r\n    return finalScore;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//____________________ResizeEvent____________________\r\n\r\nexport const resizeEvent = () => {\r\n\r\n    const a = document.getElementById('application')\r\n    const body = document.body\r\n\r\n    if(a.offsetWidth >= window.innerWidth) {\r\n        body.style.justifyContent = 'left'\r\n        a.style.borderRadius = '0px'\r\n        a.style.marginTop = '10px'\r\n        a.style.marginBottom = '10px'\r\n    } else {\r\n        body.style.justifyContent = 'center'\r\n        a.style.borderRadius = '20px'\r\n        a.style.marginTop = '0px'\r\n        a.style.marginBottom = '0px'\r\n    }\r\n\r\n    if(a.offsetHeight >= window.innerHeight) {\r\n        body.style.height = '100%'\r\n    } else {\r\n        body.style.height = '100vh'\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nconst isTest = () => {\r\n\r\n    const parameter = new URLSearchParams(window.location.search).get('test');\r\n    return parameter === 'true';\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction checkCredentials(name, password) {\r\n    return name !== '' && password !== ''\r\n}\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}