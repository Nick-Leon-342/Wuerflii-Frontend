{"ast":null,"code":"//____________________IDs____________________\n\nexport const id_upperTable = 'upperTable';\nexport const id_bottomTable = 'bottomTable';\nexport const id_playerTable = 'playerTable';\n\n//____________________Substrings____________________\n\nconst substring_players = 'players';\nconst substring_attributes = 'attributes';\nconst substring_gnadenwurf = 'gnadenwurf';\nconst substring_winner = 'winner';\n\n//____________________SessionStorage____________________\n\nconst substring_sessionStorage = 'kniffel_sessionStorage_';\nexport const sessionStorage_players = substring_sessionStorage + substring_players;\nexport const sessionStorage_attributes = substring_sessionStorage + substring_attributes;\nexport const sessionStorage_gnadenwurf = substring_sessionStorage + substring_gnadenwurf;\nexport const sessionStorage_winner = substring_sessionStorage + substring_winner;\nexport const sessionStorage_upperTable_substring = substring_sessionStorage + id_upperTable + '_';\nexport const sessionStorage_bottomTable_substring = substring_sessionStorage + id_bottomTable + '_';\n\n//____________________ClearStorage____________________\n\nexport function clearSessionStorage() {\n  cSS(substring_sessionStorage);\n}\nexport function clearSessionStorageTables() {\n  cSS(sessionStorage_upperTable_substring);\n  cSS(sessionStorage_bottomTable_substring);\n}\nfunction cSS(substring) {\n  const sessionStorage_Keys = [];\n  for (let i = 0; i < sessionStorage.length; i++) {\n    sessionStorage_Keys.push(sessionStorage.key(i));\n  }\n  for (const key of sessionStorage_Keys) {\n    if (key.includes(substring)) {\n      sessionStorage.removeItem(key);\n    }\n  }\n}\n\n//____________________CreateObjects____________________\n\nexport const createPlayer = (name, alias, color) => {\n  return {\n    Name: name,\n    Alias: alias,\n    Color: color,\n    Wins: 0\n  };\n};\nexport const createAttributes = columns => {\n  return {\n    Columns: columns,\n    LastPlayed: new Date(),\n    CreatedDate: new Date(),\n    SessionName: ''\n  };\n};\nexport const createFinalScoreElement = (players, scoreList) => {\n  const finalScore = {\n    Played: new Date()\n  };\n  for (let i = 0; i < players.length; i++) {\n    finalScore[players[i].Alias] = scoreList[i];\n  }\n  return finalScore;\n};\nexport const formatDate = date => {\n  const d = new Date(date);\n  const day = d.getDate();\n  const month = d.getMonth() + 1;\n  const year = d.getFullYear();\n  const formattedDay = day < 10 ? `0${day}` : `${day}`;\n  const formattedMonth = month < 10 ? `0${month}` : `${month}`;\n  return `${formattedDay}.${formattedMonth}.${year}`;\n};\n\n//____________________ResizeEvent____________________\n\nexport const resizeEvent = () => {\n  const a = document.getElementById('App');\n  const body = document.body;\n  if (!a) return;\n\n  // body.style.height = '100%'\n  // if(a.offsetHeight >= window.innerHeight) {\n  //     body.style.height = '100%'\n  //     // body.style.height = '100vh'\n  // } else {\n  //     body.style.height = '100vh'\n  //     // body.style.height = '100%'\n  // }\n\n  if (a.offsetWidth >= window.innerWidth) {\n    body.style.justifyContent = 'left';\n    a.style.borderRadius = '0px';\n    a.style.marginTop = '10px';\n    a.style.marginBottom = '10px';\n  } else {\n    body.style.justifyContent = 'center';\n    a.style.borderRadius = '20px';\n    a.style.marginTop = '0px';\n    a.style.marginBottom = '0px';\n  }\n};","map":{"version":3,"names":["id_upperTable","id_bottomTable","id_playerTable","substring_players","substring_attributes","substring_gnadenwurf","substring_winner","substring_sessionStorage","sessionStorage_players","sessionStorage_attributes","sessionStorage_gnadenwurf","sessionStorage_winner","sessionStorage_upperTable_substring","sessionStorage_bottomTable_substring","clearSessionStorage","cSS","clearSessionStorageTables","substring","sessionStorage_Keys","i","sessionStorage","length","push","key","includes","removeItem","createPlayer","name","alias","color","Name","Alias","Color","Wins","createAttributes","columns","Columns","LastPlayed","Date","CreatedDate","SessionName","createFinalScoreElement","players","scoreList","finalScore","Played","formatDate","date","d","day","getDate","month","getMonth","year","getFullYear","formattedDay","formattedMonth","resizeEvent","a","document","getElementById","body","offsetWidth","window","innerWidth","style","justifyContent","borderRadius","marginTop","marginBottom"],"sources":["C:/Users/nickl/Desktop/Git Projects/kniffel/src/pages/utils.js"],"sourcesContent":["\r\n\r\n//____________________IDs____________________\r\n\r\nexport const id_upperTable                         = 'upperTable'\r\nexport const id_bottomTable                        = 'bottomTable'\r\nexport const id_playerTable                        = 'playerTable'\r\n\r\n\r\n//____________________Substrings____________________\r\n\r\nconst substring_players                     = 'players'\r\nconst substring_attributes                  = 'attributes'\r\n\r\nconst substring_gnadenwurf                  = 'gnadenwurf'\r\nconst substring_winner                      = 'winner'\r\n\r\n\r\n//____________________SessionStorage____________________\r\n\r\nconst substring_sessionStorage                     = 'kniffel_sessionStorage_'\r\nexport const sessionStorage_players                = substring_sessionStorage + substring_players\r\nexport const sessionStorage_attributes             = substring_sessionStorage + substring_attributes\r\n\r\nexport const sessionStorage_gnadenwurf             = substring_sessionStorage + substring_gnadenwurf\r\nexport const sessionStorage_winner                 = substring_sessionStorage + substring_winner\r\n\r\nexport const sessionStorage_upperTable_substring   = substring_sessionStorage + id_upperTable + '_'\r\nexport const sessionStorage_bottomTable_substring  = substring_sessionStorage + id_bottomTable + '_'\r\n\r\n\r\n\r\n\r\n\r\n//____________________ClearStorage____________________\r\n\r\nexport function clearSessionStorage() {\r\n\r\n    cSS(substring_sessionStorage)\r\n\r\n}\r\n\r\nexport function clearSessionStorageTables() {\r\n\r\n    cSS(sessionStorage_upperTable_substring)\r\n    cSS(sessionStorage_bottomTable_substring)\r\n\r\n}\r\n\r\nfunction cSS(substring) {\r\n\r\n    const sessionStorage_Keys = [];\r\n\r\n    for(let i = 0; i < sessionStorage.length; i++) {sessionStorage_Keys.push(sessionStorage.key(i))}\r\n    \r\n    for(const key of sessionStorage_Keys) {\r\n        if (key.includes(substring)) {\r\n            sessionStorage.removeItem(key)\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//____________________CreateObjects____________________\r\n\r\nexport const createPlayer = (name, alias, color) => {\r\n    return {\r\n        Name: name,\r\n        Alias: alias,\r\n        Color: color,\r\n        Wins: 0\r\n    }\r\n}\r\n\r\nexport const createAttributes = (columns) => {\r\n    return {\r\n        Columns: columns,\r\n        LastPlayed: new Date(),\r\n        CreatedDate: new Date(),\r\n        SessionName: ''\r\n    }\r\n}\r\n\r\nexport const createFinalScoreElement = (players, scoreList) => {\r\n\r\n    const finalScore = {\r\n        Played: new Date()\r\n    }\r\n\r\n    for(let i = 0; i < players.length; i++) {\r\n        finalScore[players[i].Alias] = scoreList[i]\r\n    }\r\n\r\n    return finalScore;\r\n\r\n}\r\n\r\nexport const formatDate = (date) => {\r\n\r\n\tconst d = new Date(date)\r\n\tconst day = d.getDate()\r\n\tconst month = d.getMonth() + 1\r\n\tconst year = d.getFullYear()\r\n\r\n\tconst formattedDay = day < 10 ? `0${day}` : `${day}`\r\n\tconst formattedMonth = month < 10 ? `0${month}` : `${month}`\r\n\r\n\treturn `${formattedDay}.${formattedMonth}.${year}`\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//____________________ResizeEvent____________________\r\n\r\nexport const resizeEvent = () => {\r\n\r\n    const a = document.getElementById('App')\r\n    const body = document.body\r\n\r\n\tif(!a) return\r\n\r\n\t// body.style.height = '100%'\r\n    // if(a.offsetHeight >= window.innerHeight) {\r\n    //     body.style.height = '100%'\r\n    //     // body.style.height = '100vh'\r\n    // } else {\r\n    //     body.style.height = '100vh'\r\n    //     // body.style.height = '100%'\r\n    // }\r\n\r\n    if(a.offsetWidth >= window.innerWidth) {\r\n        body.style.justifyContent = 'left'\r\n        a.style.borderRadius = '0px'\r\n        a.style.marginTop = '10px'\r\n        a.style.marginBottom = '10px'\r\n    } else {\r\n        body.style.justifyContent = 'center'\r\n        a.style.borderRadius = '20px'\r\n        a.style.marginTop = '0px'\r\n        a.style.marginBottom = '0px'\r\n    }\r\n    \r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}