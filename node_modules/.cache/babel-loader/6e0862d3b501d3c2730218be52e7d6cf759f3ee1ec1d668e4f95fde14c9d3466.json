{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nickl\\\\Desktop\\\\Git Projects\\\\kniffel\\\\src\\\\pages\\\\EndScreen.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport './css/EndScreen.css';\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { sessionStorage_players, sessionStorage_winner, clearSessionStorage, resizeEvent } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EndScreen() {\n  _s();\n  const navigate = useNavigate();\n  let players = JSON.parse(sessionStorage.getItem(sessionStorage_players));\n  let winner = JSON.parse(sessionStorage.getItem(sessionStorage_winner));\n\n  // const resizeTable = () => {\n\n  // \tconst t = document.getElementById('wins-table').querySelectorAll('td')\n  // \tlet max_width = t[1].offsetWidth\n  // \tfor(let i = 1; t.length > i; i++) {\n  // \t\tconst tmp_Width = t[i].offsetWidth\n  // \t\tif(tmp_Width > max_width) {max_width = tmp_Width}\n  // \t}\n\n  // \tfor(const e of t) {\n  // \t\te.style.width = max_width + 'px'\n  // \t}\n\n  // }\n\n  useEffect(() => {\n    resizeEvent();\n  }, []);\n  const ok = () => {\n    clearSessionStorage();\n    navigate('/creategame', {\n      replace: true\n    });\n  };\n  let string = `'${players[winner[0]].Name}' `;\n  for (let i = 1; winner.length > i; i++) {\n    const p = `'${players[winner[i]].Name}'`;\n    if (i + 1 === winner.length) {\n      string += ` und ${p} haben gewonnen!`;\n    } else {\n      string += `, ${p}`;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"winner\",\n        children: winner.length === 1 ? `'${players[winner[0]].Name}' hat gewonnen!` : `${string}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table wins\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Spieler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 7\n          }, this), players.map((p, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: p.Name\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 8\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Gewonnen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 7\n          }, this), players.map((p, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: p.Wins\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 8\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      style: {\n        width: '100%'\n      },\n      onClick: ok,\n      children: \"Ok\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(EndScreen, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = EndScreen;\nexport default EndScreen;\nvar _c;\n$RefreshReg$(_c, \"EndScreen\");","map":{"version":3,"names":["React","useEffect","useNavigate","sessionStorage_players","sessionStorage_winner","clearSessionStorage","resizeEvent","jsxDEV","_jsxDEV","Fragment","_Fragment","EndScreen","_s","navigate","players","JSON","parse","sessionStorage","getItem","winner","ok","replace","string","Name","i","length","p","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","Wins","style","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nickl/Desktop/Git Projects/kniffel/src/pages/EndScreen.js"],"sourcesContent":["\r\n\r\nimport '../App.css'\r\nimport './css/EndScreen.css'\r\n\r\nimport React, { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { sessionStorage_players, sessionStorage_winner, clearSessionStorage, resizeEvent } from './utils'\r\n\r\n\r\nfunction EndScreen() {\r\n\r\n\tconst navigate = useNavigate()\r\n\tlet players = JSON.parse(sessionStorage.getItem(sessionStorage_players))\r\n\tlet winner = JSON.parse(sessionStorage.getItem(sessionStorage_winner))\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// const resizeTable = () => {\r\n\t\r\n\t// \tconst t = document.getElementById('wins-table').querySelectorAll('td')\r\n\t// \tlet max_width = t[1].offsetWidth\r\n\t// \tfor(let i = 1; t.length > i; i++) {\r\n\t// \t\tconst tmp_Width = t[i].offsetWidth\r\n\t// \t\tif(tmp_Width > max_width) {max_width = tmp_Width}\r\n\t// \t}\r\n\t\r\n\t// \tfor(const e of t) {\r\n\t// \t\te.style.width = max_width + 'px'\r\n\t// \t}\r\n\t\r\n\t// }\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tuseEffect(() => {\r\n\t\tresizeEvent()\r\n\t}, [])\r\n\r\n\t\r\n\tconst ok = () => {\r\n\t\t\r\n\t\tclearSessionStorage()\r\n\t\tnavigate('/creategame', { replace: true })\r\n\t\r\n\t}\r\n\r\n\r\n\tlet string = `'${players[winner[0]].Name}' `\r\n\tfor(let i = 1; winner.length > i; i++) {\r\n\t\tconst p = `'${players[winner[i]].Name}'`\r\n\t\tif((i + 1) === winner.length) {\r\n\t\t\tstring += ` und ${p} haben gewonnen!`\r\n\t\t} else {\r\n\t\t\tstring += `, ${p}`\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='button-container'><label className='winner'>\r\n\t\t\t\t{winner.length === 1 ? `'${players[winner[0]].Name}' hat gewonnen!` : `${string}`}\r\n\t\t\t</label></div>\r\n\r\n\t\t\t<br/>\r\n\r\n\t\t\t<table className='table wins'>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Spieler</td>\r\n\t\t\t\t\t\t{players.map((p, i) => (\r\n\t\t\t\t\t\t\t<td key={i}>{p.Name}</td>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Gewonnen</td>\r\n\t\t\t\t\t\t{players.map((p, i) => (\r\n\t\t\t\t\t\t\t<td key={i}>{p.Wins}</td>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\r\n\t\t\t<button className='button' style={{ width: '100%' }} onClick={ok}>Ok</button>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default EndScreen\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}