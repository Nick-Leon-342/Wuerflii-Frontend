{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nickl\\\\Desktop\\\\Git Projects\\\\kniffel\\\\src\\\\pages\\\\Registration.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport './css/Registration.css';\nimport { useRef, useState, useEffect } from 'react';\nimport { faCheck, faTimes, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from '../api/axios';\nimport useAuth from '../hooks/useAuth';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { resizeEvent } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,49}$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,128}$/;\nconst REGISTER_URL = '/auth/registration';\nconst Registration = () => {\n  _s();\n  const userRef = useRef();\n  const errRef = useRef();\n  const navigate = useNavigate();\n  const {\n    setAuth\n  } = useAuth();\n  const [Name, setUser] = useState('');\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n  const [Password, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  useEffect(() => {\n    setValidName(USER_REGEX.test(Name));\n  }, [Name]);\n  useEffect(() => {\n    resizeEvent();\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    setValidPwd(PWD_REGEX.test(Password));\n    setValidMatch(Password === matchPwd);\n  }, [Password, matchPwd]);\n  useEffect(() => {\n    setErrMsg('');\n  }, [Name, Password, matchPwd]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const v1 = USER_REGEX.test(Name);\n    const v2 = PWD_REGEX.test(Password);\n    if (!v1 || !v2) {\n      setErrMsg('Invalid Entry');\n      return;\n    }\n    try {\n      var _response$data;\n      const response = await axios.post(REGISTER_URL, JSON.stringify({\n        Name,\n        Password\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      const accessToken = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.accessToken;\n      setAuth({\n        accessToken\n      });\n      setUser('');\n      setPwd('');\n      navigate('/CreateGame', {\n        replace: true\n      });\n    } catch (err) {\n      var _err$response;\n      console.log(err);\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg('No Server Response');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 409) {\n        setErrMsg('Username Taken');\n      } else {\n        setErrMsg('Registration Failed');\n      }\n      errRef.current.focus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      ref: errRef,\n      className: errMsg ? 'errmsg' : 'offscreen',\n      \"aria-live\": \"assertive\",\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-header\",\n        htmlFor: \"Name\",\n        children: [\"Benutzername\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCheck,\n          className: validName ? 'valid' : 'hide'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes,\n          className: validName || !Name ? 'hide' : 'invalid'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        id: \"Name\",\n        placeholder: \"Jeffrey\",\n        ref: userRef,\n        autoComplete: \"off\",\n        onChange: e => setUser(e.target.value),\n        value: Name,\n        required: true,\n        \"aria-invalid\": validName ? 'false' : 'true',\n        \"aria-describedby\": \"uidnote\",\n        onFocus: () => setUserFocus(true),\n        onBlur: () => setUserFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"uidnote\",\n        className: userFocus && Name && !validName ? 'instructions' : 'offscreen',\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 6\n        }, this), \"Der Benutzername muss zwischen 4 und 50 Zeichen lang sein und mit einem Buchstaben anfangen.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 98\n        }, this), \"Erlaubt sind Buchstaben, Zahlen, Binde- und Unterstriche.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-header\",\n        htmlFor: \"Password\",\n        children: [\"Passwort\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCheck,\n          className: validPwd ? 'valid' : 'hide'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes,\n          className: validPwd || !Password ? 'hide' : 'invalid'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"input\",\n        id: \"Password\",\n        placeholder: \"#Pass123\",\n        onChange: e => setPwd(e.target.value),\n        value: Password,\n        required: true,\n        \"aria-invalid\": validPwd ? 'false' : 'true',\n        \"aria-describedby\": \"pwdnote\",\n        onFocus: () => setPwdFocus(true),\n        onBlur: () => setPwdFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"pwdnote\",\n        className: pwdFocus && !validPwd ? 'instructions' : 'offscreen',\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 6\n        }, this), \"Das Passwort muss zwischen 8 und 128 Zeichen lang sein.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 61\n        }, this), \"Erlaubt sind Kleinbuchstaben, Gro\\xDFuchstaben, Zahlen und diese Zeichen:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 76\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-label\": \"exclamation mark\",\n          children: \"!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 6\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-label\": \"at symbol\",\n          children: \"@\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 51\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-label\": \"hashtag\",\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 89\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-label\": \"dollar sign\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 125\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-label\": \"percent\",\n          children: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 165\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-header\",\n        htmlFor: \"confirm_pwd\",\n        children: [\"Passwort best\\xE4tigen\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCheck,\n          className: validMatch && matchPwd ? 'valid' : 'hide'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes,\n          className: validMatch || !matchPwd ? 'hide' : 'invalid'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"input\",\n        id: \"confirm_pwd\",\n        placeholder: \"#Pass123\",\n        onChange: e => setMatchPwd(e.target.value),\n        value: matchPwd,\n        required: true,\n        \"aria-invalid\": validMatch ? 'false' : 'true',\n        \"aria-describedby\": \"confirmnote\",\n        onFocus: () => setMatchFocus(true),\n        onBlur: () => setMatchFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"confirmnote\",\n        className: matchFocus && !validMatch ? 'instructions' : 'offscreen',\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 6\n        }, this), \"Die Passw\\xF6rter m\\xFCssen gleich sein.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button registration\",\n        disabled: !validName || !validPwd || !validMatch ? true : false,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"goLogin\",\n      children: [\"Bereits registriert?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"line\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Einloggen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(Registration, \"2PDZ99nOsv+XMZPVeM3RmaDiWJs=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Registration;\nexport default Registration;\n\n// import React from 'react'\n// import { Formik, Form, Field, ErrorMessage } from 'formik'\n// import axios from '../api/axios'\n// import { useNavigate } from 'react-router-dom'\n// import * as Yup from 'yup'\n\n// function Registration() {\n\n// \tlet navigate = useNavigate()\n\n// \tconst initialValues = {\n// \t\tName: '',\n// \t\tPassword: ''\n// \t}\n\n// \tconst onSubmit = (values) => {\n\n// \t\taxios.post('/auth/registration', values).then((res) => {\n// \t\t\tif(res.status === 201) {\n// \t\t\t\tnavigate('/login')\n// \t\t\t}\n// \t\t})\n\n// \t}\n\n// \tconst validationSchema = Yup.object().shape({\n// \t\tName: Yup.string()\n// \t\t\t\t.min(6, 'Der Benutzername muss mindestens 6 Zeichen lang sein!')\n// \t\t\t\t.max(128, 'Der Benutzername darf maximal 128 Zeichen lang sein!')\n// \t\t\t\t.required('Du musst einen Benutzernamen eingeben!'),\n// \t\tPassword: Yup.string()\n// \t\t\t\t.min(6, 'Das Passwort muss aus mindestens 6 Zeichen bestehen!')\n// \t\t\t\t//  .minLowerCase(1, 'Der Benutzername muss aus mindestens einem Kleinbuchstaben bestehen!')\n// \t\t\t\t// .minUpperCase(1, 'Der Benutzername muss aus mindestens einem Großuchstaben bestehen!')\n// \t\t\t\t// .minNumbers(1, 'Der Benutzername muss aus mindestens einer Zahl bestehen!')\n// \t\t\t\t.max(128, 'Das Passwort darf maximal 128 Zeichen lang sein!')\n// \t\t\t\t.required('Du musst ein Passwort eingeben!')\n// \t})\n\n// \tconst navigateEvent = () => {navigate('/login')}\n\n// \treturn (\n// \t\t<div>\n\n// \t\t\t<button onClick={navigateEvent}>Login</button>\n\n// \t\t\t<br/>\n// \t\t\t<br/>\n\n// \t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\n// \t\t\t\t<Form>\n\n// \t\t\t\t\t<label>Benutzername: </label>\n// \t\t\t\t\t<br/>\n// \t\t\t\t\t<ErrorMessage name='Name' />\n// \t\t\t\t\t<br/>\n// \t\t\t\t\t<Field id='username' name='Name' placeholder='username' />\n// \t\t\t\t\t<br/>\n\n// \t\t\t\t\t<label>Passwort: </label>\n// \t\t\t\t\t<br/>\n// \t\t\t\t\t<ErrorMessage name='Password' />\n// \t\t\t\t\t<br/>\n// \t\t\t\t\t<Field id='password' name='Password' placeholder='password' type='password' />\n// \t\t\t\t\t<br/>\n\n// \t\t\t\t\t<label>Passwort bestätigen: </label>\n// \t\t\t\t\t<br/>\n// \t\t\t\t\t<ErrorMessage name='ConfirmPassword' />\n// \t\t\t\t\t<br/>\n// \t\t\t\t\t<Field id='confirmPassword' name='ConfirmPassword' placeholder='confirm password' type='password' />\n// \t\t\t\t\t<br/>\n// \t\t\t\t\t<br />\n\n// \t\t\t\t\t<button type='submit'>Registrieren</button>\n\n// \t\t\t\t</Form>\n// \t\t\t</Formik>\n\n// \t\t</div>\n// \t)\n// }\n\n// export default Registration\n\n// // const validatePassword = values => {\n// //   let error = ''\n// //   const passwordRegex = /(?=.*[0-9])/\n// //   if (!values) {\n// //     error = '*Required'\n// //   } else if (values.length < 8) {\n// //     error = '*Password must be 8 characters long.'\n// //   } else if (!passwordRegex.test(values)) {\n// //     error = '*Invalid password. Must contain one number.'\n// //   }\n// //   return error\n// // }\n\n// // const validateConfirmPassword = (pass, value) => {\n\n// //   let error = ''\n// //   if (pass && value) {\n// //     if (pass !== value) {\n// //       error = 'Password not matched'\n// //     }\n// //   }\n// //   return error\n// // }\n\n// //  <Field type='password' name='password' validate={validatePassword} />\n\n// //  {errors.password && <div>{errors.password}</div>}\n\n// //  <Field type='password' name='confirmPassword' validate={value =>\n// //               validateConfirmPassword(values.password, value)\n// //             }/>\n\n// //  {errors.confirmPassword && (<div>{errors.confirmPassword}</div>)}\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["useRef","useState","useEffect","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","axios","useAuth","Link","useNavigate","resizeEvent","jsxDEV","_jsxDEV","Fragment","_Fragment","USER_REGEX","PWD_REGEX","REGISTER_URL","Registration","_s","userRef","errRef","navigate","setAuth","Name","setUser","validName","setValidName","userFocus","setUserFocus","Password","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","test","current","focus","handleSubmit","e","preventDefault","v1","v2","_response$data","response","post","JSON","stringify","headers","withCredentials","accessToken","data","replace","err","_err$response","console","log","status","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","icon","type","id","placeholder","autoComplete","onChange","target","value","required","onFocus","onBlur","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/nickl/Desktop/Git Projects/kniffel/src/pages/Registration.js"],"sourcesContent":["\r\n\r\nimport '../App.css'\r\nimport './css/Registration.css'\r\n\r\nimport { useRef, useState, useEffect } from 'react'\r\nimport { faCheck, faTimes, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport axios from '../api/axios'\r\nimport useAuth from '../hooks/useAuth'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { resizeEvent } from './utils'\r\n\r\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,49}$/\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,128}$/\r\nconst REGISTER_URL = '/auth/registration'\r\n\r\nconst Registration = () => {\r\n\r\n\tconst userRef = useRef()\r\n\tconst errRef = useRef()\r\n\tconst navigate = useNavigate()\r\n\tconst { setAuth } = useAuth()\r\n\r\n\tconst [Name, setUser] = useState('')\r\n\tconst [validName, setValidName] = useState(false)\r\n\tconst [userFocus, setUserFocus] = useState(false)\r\n\r\n\tconst [Password, setPwd] = useState('')\r\n\tconst [validPwd, setValidPwd] = useState(false)\r\n\tconst [pwdFocus, setPwdFocus] = useState(false)\r\n\r\n\tconst [matchPwd, setMatchPwd] = useState('')\r\n\tconst [validMatch, setValidMatch] = useState(false)\r\n\tconst [matchFocus, setMatchFocus] = useState(false)\r\n\r\n\tconst [errMsg, setErrMsg] = useState('')\r\n\r\n\tuseEffect(() => {setValidName(USER_REGEX.test(Name))}, [Name])\r\n\tuseEffect(() => {\r\n\t\tresizeEvent()\r\n\t\tuserRef.current.focus()\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetValidPwd(PWD_REGEX.test(Password))\r\n\t\tsetValidMatch(Password === matchPwd)\r\n\t}, [Password, matchPwd])\r\n\r\n\tuseEffect(() => {setErrMsg('')}, [Name, Password, matchPwd])\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tconst v1 = USER_REGEX.test(Name)\r\n\t\tconst v2 = PWD_REGEX.test(Password)\r\n\t\tif (!v1 || !v2) {\r\n\t\t\tsetErrMsg('Invalid Entry')\r\n\t\t\treturn\r\n\t\t}\r\n\t\ttry {\r\n\r\n\t\t\tconst response = await axios.post(REGISTER_URL, \r\n\t\t\t\tJSON.stringify({ Name, Password }),\r\n\t\t\t\t{\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    withCredentials: true\r\n                }\r\n\t\t\t)\r\n            const accessToken = response?.data?.accessToken\r\n            setAuth({ accessToken })\r\n            setUser('')\r\n            setPwd('')\r\n\r\n            navigate('/CreateGame', { replace: true })\r\n\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t\tif (!err?.response) {\r\n\t\t\t\tsetErrMsg('No Server Response')\r\n\t\t\t} else if (err.response?.status === 409) {\r\n\t\t\t\tsetErrMsg('Username Taken')\r\n\t\t\t} else {\r\n\t\t\t\tsetErrMsg('Registration Failed')\r\n\t\t\t}\r\n\t\t\terrRef.current.focus()\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p ref={errRef} className={errMsg ? 'errmsg' : 'offscreen'} aria-live='assertive'>{errMsg}</p>\r\n\t\t\t{/* <h1>Registration</h1> */}\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\r\n\t\t\t\t<p className='input-header' htmlFor='Name'>\r\n\t\t\t\t\tBenutzername\r\n\t\t\t\t\t<FontAwesomeIcon icon={faCheck} className={validName ? 'valid' : 'hide'} />\r\n\t\t\t\t\t<FontAwesomeIcon icon={faTimes} className={validName || !Name ? 'hide' : 'invalid'} />\r\n\t\t\t\t</p>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tclassName='input'\r\n\t\t\t\t\tid='Name'\r\n\t\t\t\t\tplaceholder='Jeffrey'\r\n\t\t\t\t\tref={userRef}\r\n\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\tonChange={(e) => setUser(e.target.value)}\r\n\t\t\t\t\tvalue={Name}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\taria-invalid={validName ? 'false' : 'true'}\r\n\t\t\t\t\taria-describedby='uidnote'\r\n\t\t\t\t\tonFocus={() => setUserFocus(true)}\r\n\t\t\t\t\tonBlur={() => setUserFocus(false)}\r\n\t\t\t\t/>\r\n\t\t\t\t<p id='uidnote' className={userFocus && Name && !validName ? 'instructions' : 'offscreen'}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faInfoCircle} />\r\n\t\t\t\t\tDer Benutzername muss zwischen 4 und 50 Zeichen lang sein und mit einem Buchstaben anfangen.<br />\r\n\t\t\t\t\tErlaubt sind Buchstaben, Zahlen, Binde- und Unterstriche.\r\n\t\t\t\t</p>\r\n\r\n\r\n\t\t\t\t<p className='input-header' htmlFor='Password'>\r\n\t\t\t\t\tPasswort\r\n\t\t\t\t\t<FontAwesomeIcon icon={faCheck} className={validPwd ? 'valid' : 'hide'} />\r\n\t\t\t\t\t<FontAwesomeIcon icon={faTimes} className={validPwd || !Password ? 'hide' : 'invalid'} />\r\n\t\t\t\t</p>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tclassName='input'\r\n\t\t\t\t\tid='Password'\r\n\t\t\t\t\tplaceholder='#Pass123'\r\n\t\t\t\t\tonChange={(e) => setPwd(e.target.value)}\r\n\t\t\t\t\tvalue={Password}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\taria-invalid={validPwd ? 'false' : 'true'}\r\n\t\t\t\t\taria-describedby='pwdnote'\r\n\t\t\t\t\tonFocus={() => setPwdFocus(true)}\r\n\t\t\t\t\tonBlur={() => setPwdFocus(false)}\r\n\t\t\t\t/>\r\n\t\t\t\t<p id='pwdnote' className={pwdFocus && !validPwd ? 'instructions' : 'offscreen'}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faInfoCircle} />\r\n\t\t\t\t\tDas Passwort muss zwischen 8 und 128 Zeichen lang sein.<br />\r\n\t\t\t\t\tErlaubt sind Kleinbuchstaben, Großuchstaben, Zahlen und diese Zeichen:<br />\r\n\t\t\t\t\t<span aria-label='exclamation mark'>!</span> <span aria-label='at symbol'>@</span> <span aria-label='hashtag'>#</span> <span aria-label='dollar sign'>$</span> <span aria-label='percent'>%</span>\r\n\t\t\t\t</p>\r\n\r\n\r\n\t\t\t\t<p className='input-header' htmlFor='confirm_pwd'>\r\n\t\t\t\t\tPasswort bestätigen\r\n\t\t\t\t\t<FontAwesomeIcon icon={faCheck} className={validMatch && matchPwd ? 'valid' : 'hide'} />\r\n\t\t\t\t\t<FontAwesomeIcon icon={faTimes} className={validMatch || !matchPwd ? 'hide' : 'invalid'} />\r\n\t\t\t\t</p>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tclassName='input'\r\n\t\t\t\t\tid='confirm_pwd'\r\n\t\t\t\t\tplaceholder='#Pass123'\r\n\t\t\t\t\tonChange={(e) => setMatchPwd(e.target.value)}\r\n\t\t\t\t\tvalue={matchPwd}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\taria-invalid={validMatch ? 'false' : 'true'}\r\n\t\t\t\t\taria-describedby='confirmnote'\r\n\t\t\t\t\tonFocus={() => setMatchFocus(true)}\r\n\t\t\t\t\tonBlur={() => setMatchFocus(false)}\r\n\t\t\t\t/>\r\n\t\t\t\t<p id='confirmnote' className={matchFocus && !validMatch ? 'instructions' : 'offscreen'}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faInfoCircle} />\r\n\t\t\t\t\tDie Passwörter müssen gleich sein.\r\n\t\t\t\t</p>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<br/>\r\n\r\n\t\t\t\t<button className='button registration' disabled={!validName || !validPwd || !validMatch ? true : false}>Sign Up</button>\r\n\t\t\t</form>\r\n\t\t\t<p className='goLogin'>\r\n\t\t\t\tBereits registriert?{' '}\r\n\t\t\t\t<span className='line'>\r\n\t\t\t\t\t<Link to='/'>Einloggen</Link>\r\n\t\t\t\t</span>\r\n\t\t\t</p>\r\n\t\t</>\r\n\r\n\t)\r\n\r\n}\r\n\r\nexport default Registration\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n// import { Formik, Form, Field, ErrorMessage } from 'formik'\r\n// import axios from '../api/axios'\r\n// import { useNavigate } from 'react-router-dom'\r\n// import * as Yup from 'yup'\r\n\r\n\r\n// function Registration() {\r\n\r\n// \tlet navigate = useNavigate()\r\n\r\n// \tconst initialValues = {\r\n// \t\tName: '',\r\n// \t\tPassword: ''\r\n// \t}\r\n\r\n// \tconst onSubmit = (values) => {\r\n\r\n// \t\taxios.post('/auth/registration', values).then((res) => {\r\n// \t\t\tif(res.status === 201) {\r\n// \t\t\t\tnavigate('/login')\r\n// \t\t\t}\r\n// \t\t})\r\n\r\n// \t}\r\n\r\n// \tconst validationSchema = Yup.object().shape({\r\n// \t\tName: Yup.string()\r\n// \t\t\t\t.min(6, 'Der Benutzername muss mindestens 6 Zeichen lang sein!')\r\n// \t\t\t\t.max(128, 'Der Benutzername darf maximal 128 Zeichen lang sein!')\r\n// \t\t\t\t.required('Du musst einen Benutzernamen eingeben!'),\r\n// \t\tPassword: Yup.string()\r\n// \t\t\t\t.min(6, 'Das Passwort muss aus mindestens 6 Zeichen bestehen!')\r\n// \t\t\t\t//  .minLowerCase(1, 'Der Benutzername muss aus mindestens einem Kleinbuchstaben bestehen!')\r\n// \t\t\t\t// .minUpperCase(1, 'Der Benutzername muss aus mindestens einem Großuchstaben bestehen!')\r\n// \t\t\t\t// .minNumbers(1, 'Der Benutzername muss aus mindestens einer Zahl bestehen!')\r\n// \t\t\t\t.max(128, 'Das Passwort darf maximal 128 Zeichen lang sein!')\r\n// \t\t\t\t.required('Du musst ein Passwort eingeben!')\r\n// \t})\r\n\r\n// \tconst navigateEvent = () => {navigate('/login')}\r\n\r\n// \treturn (\r\n// \t\t<div>\r\n\r\n// \t\t\t<button onClick={navigateEvent}>Login</button>\r\n\r\n// \t\t\t<br/>\r\n// \t\t\t<br/>\r\n\r\n// \t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n// \t\t\t\t<Form>\r\n\r\n// \t\t\t\t\t<label>Benutzername: </label>\r\n// \t\t\t\t\t<br/>\r\n// \t\t\t\t\t<ErrorMessage name='Name' />\r\n// \t\t\t\t\t<br/>\r\n// \t\t\t\t\t<Field id='username' name='Name' placeholder='username' />\r\n// \t\t\t\t\t<br/>\r\n\r\n\r\n// \t\t\t\t\t<label>Passwort: </label>\r\n// \t\t\t\t\t<br/>\r\n// \t\t\t\t\t<ErrorMessage name='Password' />\r\n// \t\t\t\t\t<br/>\r\n// \t\t\t\t\t<Field id='password' name='Password' placeholder='password' type='password' />\r\n// \t\t\t\t\t<br/>\r\n\r\n\r\n// \t\t\t\t\t<label>Passwort bestätigen: </label>\r\n// \t\t\t\t\t<br/>\r\n// \t\t\t\t\t<ErrorMessage name='ConfirmPassword' />\r\n// \t\t\t\t\t<br/>\r\n// \t\t\t\t\t<Field id='confirmPassword' name='ConfirmPassword' placeholder='confirm password' type='password' />\r\n// \t\t\t\t\t<br/>\r\n// \t\t\t\t\t<br />\r\n\r\n\r\n// \t\t\t\t\t<button type='submit'>Registrieren</button>\r\n\r\n// \t\t\t\t</Form>\r\n// \t\t\t</Formik>\r\n\r\n// \t\t</div>\r\n// \t)\r\n// }\r\n\r\n// export default Registration\r\n\r\n\r\n\r\n\r\n// // const validatePassword = values => {\r\n// //   let error = ''\r\n// //   const passwordRegex = /(?=.*[0-9])/\r\n// //   if (!values) {\r\n// //     error = '*Required'\r\n// //   } else if (values.length < 8) {\r\n// //     error = '*Password must be 8 characters long.'\r\n// //   } else if (!passwordRegex.test(values)) {\r\n// //     error = '*Invalid password. Must contain one number.'\r\n// //   }\r\n// //   return error\r\n// // }\r\n\r\n// // const validateConfirmPassword = (pass, value) => {\r\n\r\n// //   let error = ''\r\n// //   if (pass && value) {\r\n// //     if (pass !== value) {\r\n// //       error = 'Password not matched'\r\n// //     }\r\n// //   }\r\n// //   return error\r\n// // }\r\n\r\n// //  <Field type='password' name='password' validate={validatePassword} />\r\n\r\n// //  {errors.password && <div>{errors.password}</div>}\r\n\r\n// //  <Field type='password' name='confirmPassword' validate={value =>\r\n// //               validateConfirmPassword(values.password, value)\r\n// //             }/>\r\n\r\n// //  {errors.confirmPassword && (<div>{errors.confirmPassword}</div>)}"],"mappings":"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MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eACH,CAAC;AAIL,CAAC;AAAAtD,EAAA,CAzKKD,YAAY;EAAA,QAIAT,WAAW,EACRF,OAAO;AAAA;AAAAkF,EAAA,GALtBvE,YAAY;AA2KlB,eAAeA,YAAY;;AA0B3B;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AAAA,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}