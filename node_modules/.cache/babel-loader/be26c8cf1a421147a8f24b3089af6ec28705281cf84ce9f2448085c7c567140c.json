{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nickl\\\\Desktop\\\\Git Projects\\\\kniffel\\\\src\\\\pages\\\\SelectSession.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport './css/SelectSession.css';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { resizeEvent } from './utils';\nimport useAxiosPrivate from '../hooks/useAxiosPrivate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SelectSession() {\n  _s();\n  const axiosPrivate = useAxiosPrivate();\n\n  // \tconst target = event.target\n  // \tif(target.tagName !== 'BUTTON') {\n\n  // \t\tconst clickedElement = target.closest('dt')\n  // \t\tconst index = clickedElement.getAttribute('gameSessionIndex')\n  // \t\tsessionStorage.setItem(sessionStorage_players, JSON.stringify(players_list[index]))\n  // \t\tsessionStorage.setItem(sessionStorage_gameAttributes, JSON.stringify(gameAttributes_list[index]))\n\n  // \t\twindow.location.replace('/sessionpreview')\n\n  // \t} else {\n\n  // \t\tif (window.confirm('Bist du sicher, dass du diese Session löschen möchtest?')) {\n\n  // \t\t\tconst sessionName = target.getAttribute('gameSessionName')\n\n  // \t\t\tawait fetch('/deletesession', {\n  // \t\t\t\tmethod: 'POST',\n  // \t\t\t\theaders: { 'Content-Type': 'application/json' },\n  // \t\t\t\tbody: JSON.stringify({ SessionName: sessionName })\n  // \t\t\t})\n\n  // \t\t\twindow.location.reload()\n\n  // \t\t}\n\n  // \t}\n\n  // function loadAllSessionsHelp(data) {\n\n  // \tconst sessionNames_list = data.SessionNames_List\n  // \tplayers_list = data.Players_List\n  // \tgameAttributes_list = data.GameAttributes_List\n\n  // \tconst list = document.getElementById('sessionList')\n  // \tlist.innerHTML = ''\n\n  // \tfor(let i = 0; sessionNames_list.length > i; i++) {\n\n  // \t\tconst players = players_list[i]\n  // \t\tconst gameAttributes = gameAttributes_list[i]\n\n  // \t\tlet elementPlayersNames = ''\n  // \t\tfor(let i = 0; players.length > i; i++) {elementPlayersNames = elementPlayersNames.concat(players[i].Name + ((i+1) == players.length ? '' : ' vs '))}\n\n  // \t\tlist.innerHTML += '<dt class=\"listElement\" gameSessionIndex=\"' + i + '\">' + \n  // \t\t\t'<label class=\"listElement-label\">' + elementPlayersNames + '</label>' + \n  // \t\t\t'<div class=\"listElement-container\">' + \n  // \t\t\t'<label class=\"listElement-label\">' + gameAttributes.CreatedDate + '</label>' + \n  // \t\t\t'<button class=\"deleteGameButton\" gameSessionName=\"' + gameAttributes.SessionName + '\">X</button>' + \n  // \t\t\t'</div>' + \n  // \t\t\t'</dt>'\n  // \t}\n\n  // \tresizeEvent()\n\n  // }\n\n  const [list, setList] = useState([]);\n  const message = 'Es gibt noch keine Partie!';\n  useEffect(() => {\n    axiosPrivate.get('/selectsession').then(res => {\n      setList(res.data);\n    });\n    console.log(list);\n    resizeEvent();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"dl\", {\n      id: \"sessionList\",\n      children: list.length === 0 ? /*#__PURE__*/_jsxDEV(\"dt\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 6\n      }, this) : list.map((s, i) => /*#__PURE__*/_jsxDEV(\"dt\", {\n        className: \"listElement\",\n        index: i,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Feef\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: s.Attributes.CreatedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"deleteGameButton\",\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 8\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loadGames\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/creategame\",\n        children: \"Erstelle Spiel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(SelectSession, \"7IWukM6FPZy3JSzydcPs0IfGFIU=\", false, function () {\n  return [useAxiosPrivate];\n});\n_c = SelectSession;\nexport default SelectSession;\nvar _c;\n$RefreshReg$(_c, \"SelectSession\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","resizeEvent","useAxiosPrivate","jsxDEV","_jsxDEV","Fragment","_Fragment","SelectSession","_s","axiosPrivate","list","setList","message","get","then","res","data","console","log","children","id","length","className","fileName","_jsxFileName","lineNumber","columnNumber","map","s","i","index","Attributes","CreatedDate","to","_c","$RefreshReg$"],"sources":["C:/Users/nickl/Desktop/Git Projects/kniffel/src/pages/SelectSession.js"],"sourcesContent":["\r\n\r\nimport '../App.css'\r\nimport './css/SelectSession.css'\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { resizeEvent } from './utils'\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate'\r\n\r\n\r\nfunction SelectSession() {\r\n\r\n\r\n\tconst axiosPrivate = useAxiosPrivate()\r\n\r\n\t// \tconst target = event.target\r\n\t// \tif(target.tagName !== 'BUTTON') {\r\n\t\t\t\r\n\t// \t\tconst clickedElement = target.closest('dt')\r\n\t// \t\tconst index = clickedElement.getAttribute('gameSessionIndex')\r\n\t// \t\tsessionStorage.setItem(sessionStorage_players, JSON.stringify(players_list[index]))\r\n\t// \t\tsessionStorage.setItem(sessionStorage_gameAttributes, JSON.stringify(gameAttributes_list[index]))\r\n\r\n\t// \t\twindow.location.replace('/sessionpreview')\r\n\r\n\t// \t} else {\r\n\t\t\t\r\n\t// \t\tif (window.confirm('Bist du sicher, dass du diese Session löschen möchtest?')) {\r\n\t\t\t\t\r\n\t// \t\t\tconst sessionName = target.getAttribute('gameSessionName')\r\n\t\t\t\t\r\n\t// \t\t\tawait fetch('/deletesession', {\r\n\t// \t\t\t\tmethod: 'POST',\r\n\t// \t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t// \t\t\t\tbody: JSON.stringify({ SessionName: sessionName })\r\n\t// \t\t\t})\r\n\t\t\r\n\t// \t\t\twindow.location.reload()\r\n\r\n\t// \t\t}\r\n\r\n\t// \t}\r\n\r\n\r\n\r\n\t// function loadAllSessionsHelp(data) {\r\n\r\n\t// \tconst sessionNames_list = data.SessionNames_List\r\n\t// \tplayers_list = data.Players_List\r\n\t// \tgameAttributes_list = data.GameAttributes_List\r\n\t\t\r\n\t// \tconst list = document.getElementById('sessionList')\r\n\t// \tlist.innerHTML = ''\r\n\t\t\r\n\t// \tfor(let i = 0; sessionNames_list.length > i; i++) {\r\n\t\t\r\n\t// \t\tconst players = players_list[i]\r\n\t// \t\tconst gameAttributes = gameAttributes_list[i]\r\n\t\t\r\n\t// \t\tlet elementPlayersNames = ''\r\n\t// \t\tfor(let i = 0; players.length > i; i++) {elementPlayersNames = elementPlayersNames.concat(players[i].Name + ((i+1) == players.length ? '' : ' vs '))}\r\n\t\t\r\n\t// \t\tlist.innerHTML += '<dt class=\"listElement\" gameSessionIndex=\"' + i + '\">' + \r\n\t// \t\t\t'<label class=\"listElement-label\">' + elementPlayersNames + '</label>' + \r\n\t// \t\t\t'<div class=\"listElement-container\">' + \r\n\t// \t\t\t'<label class=\"listElement-label\">' + gameAttributes.CreatedDate + '</label>' + \r\n\t// \t\t\t'<button class=\"deleteGameButton\" gameSessionName=\"' + gameAttributes.SessionName + '\">X</button>' + \r\n\t// \t\t\t'</div>' + \r\n\t// \t\t\t'</dt>'\r\n\t// \t}\r\n\t\t\r\n\t// \tresizeEvent()\r\n\r\n\t// }\r\n\r\n\r\n\tconst [list, setList] = useState([])\r\n\tconst message = 'Es gibt noch keine Partie!'\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\taxiosPrivate.get('/selectsession').then((res) => {\r\n\t\t\tsetList(res.data)\r\n\t\t})\r\n\r\n\t\tconsole.log(list)\r\n\r\n\t\tresizeEvent()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<dl id='sessionList'>\r\n\t\t\t\t{list.length === 0 ? (\r\n\t\t\t\t\t<dt className='message'>{message}</dt>\r\n\t\t\t\t) : (\r\n\t\t\t\t\tlist.map((s, i) => (\r\n\t\t\t\t\t\t<dt className='listElement' index={i} key={i}>\r\n\t\t\t\t\t\t\t<label className='label'>Feef</label>\r\n\t\t\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t\t\t<label className='label'>{s.Attributes.CreatedDate}</label>\r\n\t\t\t\t\t\t\t\t<button className='deleteGameButton'>X</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</dt>\r\n\t\t\t\t\t))\r\n\t\t\t\t)}\r\n\t\t\t</dl>\r\n\t\t\t\r\n\t\t\t<p className='loadGames'>\r\n\t\t\t\t<Link to='/creategame'>Erstelle Spiel</Link>\r\n\t\t\t</p>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SelectSession\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}