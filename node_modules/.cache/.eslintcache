[{"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\index.js":"1","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\App.js":"2","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\reportWebVitals.js":"3","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\context\\AuthProvider.js":"4","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\Registration.js":"5","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\utils.js":"6","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\Login.js":"7","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\CreateGame.js":"8","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\PersistLogin.js":"9","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\EnterNames.js":"10","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\Game.js":"11","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\SelectSession.js":"12","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\hooks\\useRefreshToken.js":"13","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\hooks\\useAuth.js":"14","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\api\\axios.js":"15","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\hooks\\useAxiosPrivate.js":"16","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\EndScreen.js":"17","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\SessionPreview.js":"18","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\PossibleEntries.js":"19","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\utils-env.js":"20","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\SessionAnalytics.js":"21","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\components\\Loader.js":"22","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\components\\info\\InfoName.js":"23","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\components\\info\\InfoPassword.js":"24","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\components\\info\\InfoPasswordMatch.js":"25"},{"size":620,"mtime":1699188179825,"results":"26","hashOfConfig":"27"},{"size":1797,"mtime":1698617420776,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1697222523094,"results":"29","hashOfConfig":"27"},{"size":358,"mtime":1697222523085,"results":"30","hashOfConfig":"27"},{"size":10698,"mtime":1699521269311,"results":"31","hashOfConfig":"27"},{"size":3209,"mtime":1699203632969,"results":"32","hashOfConfig":"27"},{"size":3900,"mtime":1699427119795,"results":"33","hashOfConfig":"27"},{"size":13286,"mtime":1699516273845,"results":"34","hashOfConfig":"27"},{"size":851,"mtime":1697386032330,"results":"35","hashOfConfig":"27"},{"size":4269,"mtime":1699478978998,"results":"36","hashOfConfig":"27"},{"size":41949,"mtime":1699787777914,"results":"37","hashOfConfig":"27"},{"size":10934,"mtime":1699470592509,"results":"38","hashOfConfig":"27"},{"size":503,"mtime":1697222523086,"results":"39","hashOfConfig":"27"},{"size":318,"mtime":1697222523086,"results":"40","hashOfConfig":"27"},{"size":320,"mtime":1698519377671,"results":"41","hashOfConfig":"27"},{"size":1529,"mtime":1697806276443,"results":"42","hashOfConfig":"27"},{"size":2373,"mtime":1699468479868,"results":"43","hashOfConfig":"27"},{"size":5903,"mtime":1699427506398,"results":"44","hashOfConfig":"27"},{"size":808,"mtime":1698346096277,"results":"45","hashOfConfig":"27"},{"size":377,"mtime":1699559840795,"results":"46","hashOfConfig":"27"},{"size":3395,"mtime":1699302013050,"results":"47","hashOfConfig":"27"},{"size":192,"mtime":1699395024885,"results":"48","hashOfConfig":"27"},{"size":1370,"mtime":1699521983340,"results":"49","hashOfConfig":"27"},{"size":1517,"mtime":1699521975633,"results":"50","hashOfConfig":"27"},{"size":1136,"mtime":1699521061225,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1ohar6t",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"55"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"55"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"55"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"55"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\index.js",[],[],["135"],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\App.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\reportWebVitals.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\context\\AuthProvider.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\Registration.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\utils.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\Login.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\CreateGame.js",["136"],[],"\r\n\r\n\r\nimport '../App.css'\r\nimport './css/CreateGame.css'\r\n\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport { NAME_REGEX, PASSWORD_REGEX, clearSessionStorage, sessionStorage_session } from './utils'\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate'\r\nimport useAuth from '../hooks/useAuth'\r\nimport { REACT_APP_MAX_PLAYERS, REACT_APP_MAX_COLUMNS } from './utils-env'\r\n\r\nimport DialogName from '../components/info/InfoName'\r\nimport DialogPassword from '../components/info/InfoPassword'\r\nimport Loader from '../components/Loader'\r\n\r\n\r\nfunction CreateGame() {\r\n\r\n\tconst { setAuth } = useAuth()\r\n\tconst axiosPrivate = useAxiosPrivate()\r\n\tconst navigate = useNavigate()\r\n\r\n\tconst [loaderVisible, setLoaderVisible] = useState(false)\r\n\tconst [successfullyUpdatedVisible, setSuccessfullyUpdatedVisible] = useState(false)\r\n\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tasync function connect() {\r\n\t\t\tawait axiosPrivate.get('/creategame',\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\twithCredentials: true\r\n\t\t\t\t}\r\n\t\t\t).catch(() => {\r\n\t\t\t\tnavigate('/login', { replace: true })\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconnect()\r\n\r\n\t\tsessionStorage.getItem(sessionStorage_session) && document.getElementById('modal-switchtogame').showModal()\r\n\r\n\t}, [])\r\n\r\n\tconst next = () => {\r\n\r\n\t\tif(!players || !columns) return\r\n\t\tnavigate(`/enternames?players=${players}&columns=${columns}`, { replace: false })\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t// __________________________________________________Players__________________________________________________\r\n\r\n\tconst maxPlayers = REACT_APP_MAX_PLAYERS || 16\r\n\tconst [ players, setPlayers ] = useState('')\r\n\tconst options_players = Array.from({ length: maxPlayers }, (_, index) => index + 1)\r\n\r\n\tconst handleInputChange_players = (event) => {\r\n\t\t\r\n\t\tconst intValue = event.target.value\r\n\t\tif (isNaN(parseInt(intValue.substr(intValue.length - 1))) || intValue < 1 || parseInt(intValue) > maxPlayers) return setPlayers(intValue.slice(0, -1))\r\n\t\tsetPlayers(intValue)\r\n\t\t\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t// __________________________________________________Columns__________________________________________________\r\n\r\n\tconst maxColumns = REACT_APP_MAX_COLUMNS || 10\r\n\tconst [columns, setColumns] = useState('')\r\n\tconst options_columns = Array.from({ length: maxColumns }, (_, index) => index + 1)\r\n\r\n\tconst handleInputChange_columns = (event) => {\r\n\t\t\r\n\t\tconst intValue = event.target.value\r\n\t\tif (isNaN(parseInt(intValue.substr(intValue.length - 1))) || intValue < 1 || parseInt(intValue) > maxColumns) {return setColumns(intValue.slice(0, -1))}\r\n\t\tsetColumns(intValue)\r\n\t\t\r\n\t}\r\n\r\n\tconst logout = () => {\r\n\r\n\t\taxiosPrivate.delete('/logout').then((res) => {\r\n\t\t\tif(res.status === 204) {\r\n\t\t\t\tsetAuth({ accessToken: '' })\r\n\t\t\t\tnavigate('/login', { replace: true })\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\t// __________________________________________________Modal-Settings__________________________________________________\r\n\r\n\tconst [ infoName, setInfoName ] = useState(false)\r\n\tconst [ Name, setName ] = useState('')\r\n\r\n\tconst [ Password, setPassword ] = useState('')\r\n\tconst [ infoPassword, setInfoPassword ] = useState(false)\r\n\r\n\tconst [ error, setError ] = useState('')\r\n\r\n\r\n\tconst modalSettingsShow = () => {\r\n\r\n\t\tsetError('')\r\n\t\tsetSuccessfullyUpdatedVisible(false)\r\n\t\tdocument.getElementById('modal-settings').showModal()\r\n\r\n\t}\r\n\r\n\tconst modalSettingsClose = () => {\r\n\t\tdocument.getElementById('modal-settings').close()\r\n\t}\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\r\n\t\te.preventDefault()\r\n\t\tsetLoaderVisible(true)\r\n\r\n\t\tif ((Name && !NAME_REGEX.test(Name)) || (Password && !PASSWORD_REGEX.test(Password)) || (!Name && !Password)) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tlet json = {}\r\n\t\tif(NAME_REGEX.test(Name) && PASSWORD_REGEX.test(Password)) {\r\n\t\t\t//Name and Password are valid\r\n\t\t\tjson.Name = Name\r\n\t\t\tjson.Password = Password\r\n\t\t} else if(NAME_REGEX.test(Name)) {\r\n\t\t\t//Name is valid, password not entered\r\n\t\t\tjson.Name = Name\r\n\t\t} else {\r\n\t\t\t//Password is valid, name not entered\r\n\t\t\tjson.Password = Password\r\n\r\n\t\t}\r\n\r\n\t\ttry {\r\n\r\n\t\t\tawait axiosPrivate.post('/changecredentials', \r\n\t\t\t\tJSON.stringify(json),\r\n\t\t\t\t{\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    withCredentials: true\r\n                }\r\n\t\t\t)\r\n            setName('')\r\n            setPassword('')\r\n\t\t\tsetError('')\r\n\t\t\tsetSuccessfullyUpdatedVisible(true)\r\n\t\t\tmodalSettingsClose()\r\n\r\n\t\t} catch (err) {\r\n\t\t\tif (!err?.response) {\r\n\t\t\t\tsetError('Der Server antwortet nicht!')\r\n\t\t\t} else if (err.response?.status === 409) {\r\n\t\t\t\tsetError('Der Benutzername wird bereits benutzt!')\r\n\t\t\t} else {\r\n\t\t\t\tsetError('Es trat ein unvorhergesehener Fehler auf!')\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetLoaderVisible(false)\r\n\r\n\t}\r\n\r\n\tconst handleCancel = () => {\r\n\t\tclearSessionStorage()\r\n\t\tdocument.getElementById('modal-switchtogame').close()\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t{/* __________________________________________________Dialogs__________________________________________________ */}\r\n\r\n\t\t\t<dialog id='modal-settings' className='modal'>\r\n\t\t\t\t<div \r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n\t\t\t\t\t\t<svg autoFocus={true} onClick={modalSettingsClose} height='24' viewBox='0 -960 960 960'><path d='m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z'/></svg>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h1>Einstellungen</h1>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<p htmlFor='Username' className='input-header' style={{ color: 'black', height: '25px', marginTop: '20px', display: 'flex' }}>\r\n\t\t\t\t\t\t\t<span style={{ height: '100%', marginLeft: '7px', marginRight: '5px' }}>Benutzernamen ändern</span>\r\n\t\t\t\t\t\t\t<svg \r\n\t\t\t\t\t\t\t\theight='20' \r\n\t\t\t\t\t\t\t\tviewBox='0 -960 960 960'\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfill: 'rgb(0, 255, 0',\r\n\t\t\t\t\t\t\t\t\tdisplay: Name && NAME_REGEX.test(Name) ? '' : 'none',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t><path d='M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z'/></svg>\r\n\t\t\t\t\t\t\t<svg \r\n\t\t\t\t\t\t\t\theight='20' \r\n\t\t\t\t\t\t\t\tviewBox='0 -960 960 960'\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfill: 'rgb(255, 0, 0)',\r\n\t\t\t\t\t\t\t\t\tdisplay: Name && !NAME_REGEX.test(Name) ? '' : 'none',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t><path d='m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z'/></svg>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tvalue={Name}\r\n\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\tid='Username'\r\n\t\t\t\t\t\t\tplaceholder='Benutzername'\r\n\t\t\t\t\t\t\tonFocus={() => setInfoName(true)}\r\n\t\t\t\t\t\t\tonBlur={() => setInfoName(false)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{infoName && !NAME_REGEX.test(Name) && <DialogName/>}\r\n\t\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t\t<p htmlFor='Password' className='input-header' style={{ color: 'black', height: '25px', marginTop: '20px', display: 'flex' }}>\r\n\t\t\t\t\t\t\t<span style={{ height: '100%', marginLeft: '7px', marginRight: '5px' }}>Passwort ändern</span>\r\n\t\t\t\t\t\t\t<svg \r\n\t\t\t\t\t\t\t\theight='20' \r\n\t\t\t\t\t\t\t\tviewBox='0 -960 960 960'\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfill: 'rgb(0, 255, 0',\r\n\t\t\t\t\t\t\t\t\tdisplay: Password && PASSWORD_REGEX.test(Password) ? '' : 'none',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t><path d='M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z'/></svg>\r\n\t\t\t\t\t\t\t<svg \r\n\t\t\t\t\t\t\t\theight='20' \r\n\t\t\t\t\t\t\t\tviewBox='0 -960 960 960'\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfill: 'rgb(255, 0, 0)',\r\n\t\t\t\t\t\t\t\t\tdisplay: Password && !PASSWORD_REGEX.test(Password) ? '' : 'none',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t><path d='m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z'/></svg>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tvalue={Password}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\tid='Password'\r\n\t\t\t\t\t\t\tplaceholder='Passwort'\r\n\t\t\t\t\t\t\tonFocus={() => setInfoPassword(true)}\r\n\t\t\t\t\t\t\tonBlur={() => setInfoPassword(false)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{infoPassword && !PASSWORD_REGEX.test(Password) && <DialogPassword/>}\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<br/>\r\n\r\n\t\t\t\t\t\t<Loader loaderVisible={loaderVisible}/>\r\n\r\n\t\t\t\t\t\t<p style={{\r\n\t\t\t\t\t\t\tdisplay: error ? '' : 'none',\r\n\t\t\t\t\t\t\tborder: '2px solid rgb(255, 0, 0)',\r\n\t\t\t\t\t\t\tborderRadius: '10px',\r\n\t\t\t\t\t\t\tcolor: 'rgb(255, 0, 0)',\r\n\t\t\t\t\t\t\tfill: 'rgb(255, 0, 0)',\r\n\t\t\t\t\t\t\tmargin: '25px',\r\n\t\t\t\t\t\t\tpadding: '20px',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<span style={{ display: 'flex', justifyContent: 'center', marginBottom: '10px' }}>\r\n\t\t\t\t\t\t\t\t<svg height=\"20\" viewBox=\"0 -960 960 960\"><path fill='rgb(255, 0, 0)' d=\"M440-280h80v-240h-80v240Zm40-320q17 0 28.5-11.5T520-640q0-17-11.5-28.5T480-680q-17 0-28.5 11.5T440-640q0 17 11.5 28.5T480-600Zm0 520q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z\"/></svg>\r\n\t\t\t\t\t\t\t\t<span style={{ height: '100%', fontSize: '19px', margin: 'auto', marginLeft: '5px', color: 'rgb(255, 0, 0)' }}>Fehler</span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span style={{ display: 'flex', color: 'rgb(255, 0, 0)' }}>{error}</span>\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t<button className='button' style={{ height: '40px', width: '100%' }}>Speichern</button>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='logout'><button className='logout-button' onClick={logout}>Ausloggen</button></div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</dialog>\r\n\r\n\t\t\t<dialog id='modal-switchtogame' className='modal'>\r\n\t\t\t\t<p style={{ fontSize: '22px', }}>Es wurde ein Spiel gefunden.{<br/>}Soll es geladen werden?</p>\r\n\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName='button' \r\n\t\t\t\t\t\tonClick={() => navigate('/game', { replace: true })}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: '50%',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>Ja</button>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName='button' \r\n\t\t\t\t\t\tonClick={handleCancel}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: 'rgb(255, 0, 0)',\r\n\t\t\t\t\t\t\tcolor: 'white',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>Abbrechen</button>\r\n\t\t\t\t</div>\r\n\t\t\t</dialog>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{/* __________________________________________________Page__________________________________________________ */}\r\n\r\n\t\t\t<svg onClick={modalSettingsShow} height=\"24\" viewBox=\"0 -960 960 960\" ><path d=\"m370-80-16-128q-13-5-24.5-12T307-235l-119 50L78-375l103-78q-1-7-1-13.5v-27q0-6.5 1-13.5L78-585l110-190 119 50q11-8 23-15t24-12l16-128h220l16 128q13 5 24.5 12t22.5 15l119-50 110 190-103 78q1 7 1 13.5v27q0 6.5-2 13.5l103 78-110 190-118-50q-11 8-23 15t-24 12L590-80H370Zm70-80h79l14-106q31-8 57.5-23.5T639-327l99 41 39-68-86-65q5-14 7-29.5t2-31.5q0-16-2-31.5t-7-29.5l86-65-39-68-99 42q-22-23-48.5-38.5T533-694l-13-106h-79l-14 106q-31 8-57.5 23.5T321-633l-99-41-39 68 86 64q-5 15-7 30t-2 32q0 16 2 31t7 30l-86 65 39 68 99-42q22 23 48.5 38.5T427-266l13 106Zm42-180q58 0 99-41t41-99q0-58-41-99t-99-41q-59 0-99.5 41T342-480q0 58 40.5 99t99.5 41Zm-2-140Z\"/></svg>\r\n\t\t\t<br/>\r\n\r\n\t\t\t<div style={{ display: successfullyUpdatedVisible ? 'flex' : 'none', justifyContent: 'center', marginTop: '10px' }}>\r\n\t\t\t\t<svg \r\n\t\t\t\t\theight='20' \r\n\t\t\t\t\tviewBox='0 -960 960 960'\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tfill: 'rgb(0, 255, 0)',\r\n\t\t\t\t\t}}\r\n\t\t\t\t><path d='M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z'/></svg>\r\n\t\t\t\t<p style={{ width: 'max-content', height: '100%', fontSize: '19px', margin: '0', marginLeft: '5px', color: 'rgb(0, 255, 0)' }}>Erfolgreich gespeichert!</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<br/>\r\n\t\t\t<div className='input-container'>\r\n\t\t\t\t<label className='input-header'>Spieler</label>\r\n\t\t\t\t{isMobile ? (\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tclassName='input-mobile'\r\n\t\t\t\t\t\tvalue={players}\r\n\t\t\t\t\t\tonChange={handleInputChange_players}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value='' disabled>\r\n\t\t\t\t\t\t\tSpieleranzahl\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t{options_players.map((p) => (\r\n\t\t\t\t\t\t\t<option key={p} value={p}>{p}</option>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\tclassName='input-computer' \r\n\t\t\t\t\t\t\tlist='players'\r\n\t\t\t\t\t\t\tvalue={players}\r\n\t\t\t\t\t\t\tonChange={handleInputChange_players}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<datalist id='players'>\r\n\t\t\t\t\t\t\t{options_players.map((p) => {\r\n\t\t\t\t\t\t\t\treturn <option key={p} value={p}/>\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</datalist>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<br/>\r\n\t\t\t<div className='input-container'>\r\n\t\t\t\t<label className='input-header'>Spalten</label>\r\n\t\t\t\t{isMobile ? (\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tclassName='input input-mobile'\r\n\t\t\t\t\t\tvalue={columns}\r\n\t\t\t\t\t\tonChange={handleInputChange_columns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value='' disabled>\r\n\t\t\t\t\t\t\tSpaltenanzahl\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t{options_columns.map((c) => (\r\n\t\t\t\t\t\t\t<option key={c} value={c}>{c}</option>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\tclassName='input-computer' \r\n\t\t\t\t\t\t\tlist='columns'\r\n\t\t\t\t\t\t\tvalue={columns}\r\n\t\t\t\t\t\t\tonChange={handleInputChange_columns}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<datalist id='columns'>\r\n\t\t\t\t\t\t\t{options_columns.map((c) => {\r\n\t\t\t\t\t\t\t\treturn <option key={c} value={c} />\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</datalist>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<br/>\r\n\t\t\t<button className='button' style={{ width: '100%', marginBottom: '0px' }} onClick={next}>Weiter</button>\r\n\r\n\t\t\t<div style={{ display: 'flex' }}>\r\n\t\t\t\t<p className='link-switch'>\r\n\t\t\t\t\t<Link to='/selectsession'>Lade Spiel</Link>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CreateGame\r\n","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\PersistLogin.js",["137"],[],"\r\n\r\nimport { Outlet, useNavigate } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\nimport useRefreshToken from '../hooks/useRefreshToken'\r\nimport useAuth from '../hooks/useAuth'\r\nimport { clearSessionStorage } from './utils'\r\n\r\nconst PersistLogin = () => {\r\n\r\n\tconst navigate = useNavigate()\r\n\tconst [isLoading, setIsLoading] = useState(true)\r\n\tconst refresh = useRefreshToken()\r\n\tconst { auth } = useAuth()\r\n\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tconst verifyRefreshToken = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tawait refresh()\r\n\t\t\t} catch(err) {\r\n\t\t\t\tclearSessionStorage()\r\n\t\t\t\tnavigate('/login')\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading(false)\r\n\t\t\t}\r\n\t\t} \r\n\t\r\n\t\t!auth?.accessToken ? verifyRefreshToken() : setIsLoading(false)\r\n\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? <p>Loading...</p> : <Outlet/>}\r\n\t\t</>\r\n\t)\r\n\t\r\n}\r\n\r\nexport default PersistLogin\r\n","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\EnterNames.js",["138"],[],"\r\n\r\nimport '../App.css'\r\nimport './css/EnterNames.css'\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport { createSession, createPlayer, sessionStorage_session } from './utils'\r\nimport { isMobile } from 'react-device-detect'\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate'\r\nimport Loader from '../components/Loader'\r\n\r\n\r\nfunction EnterNames() {\r\n\r\n\tconst navigate = useNavigate()\r\n\tconst axiosPrivate = useAxiosPrivate()\r\n\t\r\n\tconst location = useLocation()\r\n\tconst params = new URLSearchParams(location.search)\r\n\tconst players = Array.from({ length: params.get('players') }, (_, index) => index)\r\n\tconst columns = params.get('columns')\r\n\r\n\tconst [ names, setNames ] = useState(players.map((p) => `Spieler_${p + 1}`))\r\n\tconst [ colors, setColors ] = useState(players.map((p) => (p % 2 === 0 ? '#ffffff' : '#ADD8E6')))\r\n\tconst [ sessionName, setSessionName ] = useState('Partie')\r\n\tconst [ loaderVisible, setLoaderVisible ] = useState(false)\r\n\tconst [ disablePlay, setDisablePlay ] = useState(false)\r\n  \r\n\r\n\r\n\r\n\r\n\tconst handleNameChange = (index, n) => {\r\n\r\n\t\tconst updatedNames = [...names]\r\n\t\tupdatedNames[index] = n\r\n\t\tsetNames(updatedNames)\r\n\r\n\t}\r\n  \r\n\tconst handleColorChange = (index, c) => {\r\n\r\n\t\tconst updatedColors = [...colors]\r\n\t\tupdatedColors[index] = c\r\n\t\tsetColors(updatedColors)\r\n\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tasync function connect() {\r\n\t\t\tawait axiosPrivate.get('/enternames',\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\twithCredentials: true\r\n\t\t\t\t}\r\n\t\t\t).catch(() => {\r\n\t\t\t\tnavigate('/login', { replace: true })\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconnect()\r\n\r\n\t\tif(players.length === 0 || !columns || isNaN(columns)) {\r\n\t\t\treturn navigate('/creategame', { replace: true })\r\n\t\t}\r\n\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\r\n\tconst play = async () => {\r\n\r\n\t\tif(sessionName) {\r\n\r\n\t\t\tsetDisablePlay(true)\r\n\t\t\tsetLoaderVisible(true)\r\n\t\t\tconst list_playerOrder = []\r\n\t\t\tconst list_players = []\r\n\t\r\n\t\t\tfor(let i = 0; names.length > i; i++) {\r\n\t\t\t\tconst alias = `Player_${i}`\r\n\t\t\t\tlist_playerOrder.push(alias)\r\n\t\t\t\tlist_players.push(createPlayer(names[i], alias, colors[i]))\r\n\t\t\t}\r\n\r\n\t\t\tconst session = createSession(sessionName, columns, list_playerOrder, list_players)\r\n\t\t\tawait axiosPrivate.post('/enternames',\r\n\t\t\t\tsession,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\twithCredentials: true\r\n\t\t\t\t}\r\n\t\t\t).then((res) => {\r\n\r\n\t\t\t\tconst data = res?.data\r\n\t\t\t\tsession.id = data?.sessionid\r\n\t\t\t\tsession.List_Players = data?.List_Players\r\n\t\t\t\tsessionStorage.setItem(sessionStorage_session, JSON.stringify(session))\r\n\t\t\t\tnavigate(`/game?sessionid=${res?.data?.sessionid}`)\r\n\t\t\t\t\r\n\t\t\t}).catch((err) => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t\tnavigate('/creategame', { replace: true })\r\n\t\t\t})\r\n\t\t\tsetLoaderVisible(false)\r\n\t\t\tsetDisablePlay(false)\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\r\n\t\t\t<div style={{ display: 'flex', flexDirection: 'column', marginBottom: '40px' }}>\r\n\t\t\t\t<p htmlFor='Username' className='input-header' style={{ color: 'black', height: '25px', marginTop: '20px', display: 'flex' }}>\r\n\t\t\t\t\t<span style={{ height: '100%', marginLeft: '7px', marginRight: '5px' }}>Name für die Partie</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<input required value={sessionName} onChange={(e) => setSessionName(e.target.value)} style={{ width: '455px' }}/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<dl id='enterNamesList'>\r\n\t\t\t\t{players.map((p, index) => (\r\n\t\t\t\t\t<dt className='enterNamesElement' key={index}>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tdefaultValue={names[index]}\r\n\t\t\t\t\t\t\tonChange={(e) => handleNameChange(index, e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName={isMobile ? 'colorbox-mobile' : 'colorbox-computer'}\r\n\t\t\t\t\t\t\ttype='color'\r\n\t\t\t\t\t\t\tvalue={colors[index]}\r\n\t\t\t\t\t\t\tonChange={(e) => handleColorChange(index, e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</dt>\r\n\t\t\t\t))}\r\n\t\t\t</dl>\r\n\r\n\t\t\t<Loader loaderVisible={loaderVisible}/>\r\n\r\n\t\t\t<button \r\n\t\t\t\tclassName='button' \r\n\t\t\t\tonClick={play}\r\n\t\t\t\tdisabled={disablePlay}\r\n\t\t\t\tstyle={{ \r\n\t\t\t\t\twidth: '100%', \r\n\t\t\t\t\tmarginBottom: '0px' \r\n\t\t\t\t}}\r\n\t\t\t>Los!</button>\r\n\r\n\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\t\t\t\t<p className='link-switch'>\r\n\t\t\t\t\t<Link to='/creategame'>Zurück</Link>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default EnterNames\r\n","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\Game.js",["139","140"],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\SelectSession.js",["141"],[],"\r\n\r\nimport '../App.css'\r\nimport './css/SelectSession.css'\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { formatDate } from './utils'\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate'\r\nimport { isMobile } from 'react-device-detect'\r\nimport Loader from '../components/Loader'\r\n\r\n\r\nfunction SelectSession() {\r\n\r\n\tconst navigate = useNavigate()\r\n\tconst axiosPrivate = useAxiosPrivate()\r\n\r\n\tconst [list, setList] = useState([])\r\n\tconst [list_checkbox] = useState([])\r\n\tconst [trashcanDisabled, setTrashcanDisabled] = useState(true)\r\n\tconst [settingsDisabled, setSettingsDisabled] = useState(true)\r\n\tconst [session, setSession] = useState('')\r\n\tconst [list_session, setList_Session] = useState([])\r\n\tconst [loaderVisible, setLoaderVisible] = useState(false)\r\n\tconst [dialog_loaderVisible, setDialog_loaderVisible] = useState(false)\r\n\tconst [successfullyUpdatedVisible, setSuccessfullyUpdatedVisible] = useState(false)\r\n\t\r\n\tconst message = 'Es gibt noch keine Partie!'\r\n\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {request()}, [])\r\n\r\n\tasync function request() {\r\n\r\n\t\tsetLoaderVisible(true)\r\n\r\n\t\tawait axiosPrivate.get('/selectsession').then((res) => {\r\n\r\n\t\t\tconst l = res.data\r\n\t\t\tl.sort(sortByTimestampDesc)\r\n\t\t\tsetList(l)\r\n\r\n\t\t}).catch((err) => {\r\n\t\t\tconsole.log(err)\r\n\t\t})\r\n\r\n\t\tsetLoaderVisible(false)\r\n\r\n\t}\r\n\r\n\tconst sortByTimestampDesc = (a, b) => {\r\n\t\treturn new Date(b.LastPlayed) - new Date(a.LastPlayed)\r\n\t}\r\n\r\n\tconst getPlayer = (alias) => {\r\n\r\n\t\tfor(const p of session?.List_Players) {\r\n\t\t\tif(p.Alias === alias) {\r\n\t\t\t\treturn p\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\r\n\r\n\r\n\r\n\t// __________________________________________________ListElement__________________________________________________\r\n\r\n\tconst listElementClick = (element) => {\r\n\t\t\r\n\t\tconst i = element.target.closest('dt').getAttribute('index')\r\n\t\tnavigate(`/sessionpreview?sessionid=${list[i].id}`, { replace: false })\r\n\r\n\t}\r\n\r\n\tconst checkboxClick = (index, checked) => {\r\n\r\n\t\tlist_checkbox[index] = checked\r\n\r\n\t\tlet counter = 0\r\n\t\tfor(let i = 0; list_checkbox.length > i; i++) {\r\n\t\t\tif(list_checkbox[i]) {\r\n\t\t\t\tcounter++\r\n\t\t\t\tsetSession(list[i])\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetSettingsDisabled(counter !== 1)\r\n\r\n\t\tif(checked) {\r\n\t\t\tsetTrashcanDisabled(false)\r\n\t\t} else {\r\n\t\t\tfor(const e of list_checkbox) {\r\n\t\t\t\tif(e) return\r\n\t\t\t}\r\n\t\t\tsetTrashcanDisabled(true)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t// __________________________________________________Modal-Delete__________________________________________________\r\n\r\n\tconst modalDeleteShow = async () => {\r\n\r\n\t\tif(trashcanDisabled) return\r\n\t\tdocument.getElementById('modal-delete').showModal()\r\n\t\t\r\n\t}\r\n\r\n\tconst modalDeleteSubmit = async () => {\r\n\r\n\t\tmodalDeleteClose()\r\n\t\tsetLoaderVisible(true)\r\n\r\n\t\tfor(let i = 0; list_checkbox.length > i; i++) {\r\n\t\t\tif(list_checkbox[i]) {\r\n\t\t\t\tawait axiosPrivate.delete('/selectsession',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\t\twithCredentials: true,\r\n\t\t\t\t\t\tparams: { id: list[i].id }\r\n\t\t\t\t\t}\r\n\t\t\t\t).catch((err) => {\r\n\t\t\t\t\tconsole.log(err)\r\n\t\t\t\t})\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetLoaderVisible(false)\r\n\t\twindow.location.reload()\r\n\r\n\t}\r\n\r\n\tconst modalDeleteClose = () => {\r\n\t\tdocument.getElementById('modal-delete').close()\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t// __________________________________________________Modal-Edit__________________________________________________\r\n\r\n\tconst [columns, setColumns] = useState('')\r\n\tconst maxColumns = process.env.REACT_APP_MAX_COLUMNS || 10\r\n\tconst options_columns = Array.from({ length: maxColumns }, (_, index) => index + 1)\r\n\r\n\tconst modalEditHandleColumnChange = (event) => {\r\n\r\n\t\tconst intValue = event.target.value\r\n\t\tif (isNaN(parseInt(intValue.substr(intValue.length - 1))) || intValue < 1 || parseInt(intValue) > maxColumns) {return setColumns(intValue.slice(0, -1))}\r\n\t\tsetColumns(intValue)\r\n\r\n\t}\r\n\r\n\tconst modalEditShow = () => {\r\n\r\n\t\tconst tmp = []\r\n\r\n\t\tfor(const alias of session.List_PlayerOrder) {\r\n\t\t\ttmp.push(getPlayer(alias))\r\n\t\t}\r\n\r\n\t\tsetSuccessfullyUpdatedVisible(false)\r\n\t\tsetList_Session(tmp)\r\n\t\tdocument.getElementById('modal-edit').showModal()\r\n\r\n\t}\r\n\r\n\tconst modalEditClose = () => {\r\n\t\t\r\n\t\tsetList_Session([])\r\n\t\tsetColumns('')\r\n\t\tdocument.getElementById('modal-edit').close()\r\n\r\n\t}\r\n\r\n\tconst modalEditSave = async () => {\r\n\r\n\t\tsetDialog_loaderVisible(true)\r\n\r\n\t\tconst json = { id: session?.id, List_Players: [] }\r\n\t\tif(columns !== '') {\r\n\t\t\tjson['Columns'] = columns\r\n\t\t\tsession.Columns = columns\r\n\t\t}\r\n\t\tfor(const p of list_session) {\r\n\t\t\tconst player = getPlayer(p.Alias)\r\n\t\t\tplayer.Name = p.Name\r\n\t\t\tplayer.Color = p.Color\r\n\t\t\tjson.List_Players.push({\r\n\t\t\t\tid: p.id,\r\n\t\t\t\tName: p.Name,\r\n\t\t\t\tColor: p.Color,\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tawait axiosPrivate.post('/selectsession', \r\n\t\t\tJSON.stringify(json),\r\n\t\t\t{\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\twithCredentials: true\r\n\t\t\t}\r\n\t\t).then(() => {\r\n\t\t\tsetSuccessfullyUpdatedVisible(true)\r\n\t\t\tmodalEditClose()\r\n\t\t\trequest()\r\n\t\t}).catch((err) => {\r\n\t\t\treturn console.log(err)\r\n\t\t})\r\n\t\t\r\n\t\tsetDialog_loaderVisible(false)\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t{/* __________________________________________________Dialogs__________________________________________________ */}\r\n\r\n\t\t\t<dialog id='modal-edit' className='modal'>\r\n\t\t\t\t<div \r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\twidth: '',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n\t\t\t\t\t\t<svg onClick={modalEditClose} height='24' viewBox='0 -960 960 960'><path d='m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z'/></svg>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h1>Bearbeiten</h1>\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t{/* ______________________________ChangeColumns______________________________ */}\r\n\t\t\t\t\t<div className='input-container' style={{ marginBottom: '20px' }}>\r\n\t\t\t\t\t\t<label className='input-header'>Spalten</label>\r\n\t\t\t\t\t\t{isMobile ? (\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tclassName='input-mobile'\r\n\t\t\t\t\t\t\t\tonChange={modalEditHandleColumnChange}\r\n\t\t\t\t\t\t\t\tvalue={columns}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value='' disabled>\r\n\t\t\t\t\t\t\t\t\tSpaltenanzahl\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t{options_columns.map((c) => (\r\n\t\t\t\t\t\t\t\t\t<option key={c} value={c}>{c}</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\tclassName='input-computer' \r\n\t\t\t\t\t\t\t\t\tlist='columns'\r\n\t\t\t\t\t\t\t\t\tplaceholder={session?.Attributes?.Columns}\r\n\t\t\t\t\t\t\t\t\tonChange={modalEditHandleColumnChange}\r\n\t\t\t\t\t\t\t\t\tvalue={columns}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<datalist id='columns'>\r\n\t\t\t\t\t\t\t\t\t{options_columns.map((c) => {\r\n\t\t\t\t\t\t\t\t\t\treturn <option key={c} value={c} />\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</datalist>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t{/* ______________________________ChangeNames______________________________ */}\r\n\t\t\t\t\t<dl id='enterNamesList'>\r\n\t\t\t\t\t\t{list_session.map((p, index) => (\r\n\t\t\t\t\t\t\t<dt className='enterNamesElement' key={index}>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tdefaultValue={p.Name}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => p.Name = e.target.value}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName={isMobile ? 'colorbox-mobile' : 'colorbox-computer'}\r\n\t\t\t\t\t\t\t\t\ttype='color'\r\n\t\t\t\t\t\t\t\t\tdefaultValue={p.Color}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => p.Color = e.target.value}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</dt>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</dl>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className={`loader ${dialog_loaderVisible ? '' : 'notVisible'}`}>\r\n\t\t\t\t\t\t<span/>\r\n\t\t\t\t\t\t<span/>\r\n\t\t\t\t\t\t<span/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<button className='button' onClick={modalEditSave} style={{ width: '100%' }}>Speichern</button>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</dialog>\r\n\r\n\t\t\t<dialog id='modal-delete' className='modal'>\r\n\t\t\t\t<p style={{ fontSize: '22px', marginTop: '20px' }}>\r\n\t\t\t\t\tBist du sicher, dass du<br/>diese Session(s) löschen möchtest?\r\n\t\t\t\t</p>\r\n\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName='button' \r\n\t\t\t\t\t\tonClick={modalDeleteSubmit}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: '60%',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>Ja</button>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName='button' \r\n\t\t\t\t\t\tonClick={modalDeleteClose}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: 'rgb(255, 0, 0)',\r\n\t\t\t\t\t\t\tcolor: 'white',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>Abbrechen</button>\r\n\t\t\t\t</div>\r\n\t\t\t</dialog>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{/* __________________________________________________Page__________________________________________________ */}\r\n\r\n\t\t\t<div className={`trashcan-container`}>\r\n\t\t\t\t<svg style={{ marginLeft: '11px', marginRight: '3px' }} className={`${list.length === 0 ? 'notVisible' : (trashcanDisabled ? 'disabled' : '')}`} onClick={modalDeleteShow} width='25' viewBox=\"-0.5 -0.5 458 510\"><g><rect x=\"58\" y=\"55\" width=\"340\" height=\"440\" rx=\"51\" ry=\"51\" fill=\"none\" strokeWidth=\"30\" pointerEvents=\"all\"/><rect x=\"15\" y=\"55\" width=\"427\" height=\"30\" rx=\"4.5\" ry=\"4.5\" fill=\"none\" strokeWidth=\"30\" pointerEvents=\"all\"/><rect x=\"125\" y=\"145\" width=\"50\" height=\"280\" rx=\"9\" ry=\"9\" fill=\"none\" strokeWidth=\"50\" pointerEvents=\"all\"/><rect x=\"275\" y=\"145\" width=\"50\" height=\"280\" rx=\"9\" ry=\"9\" fill=\"none\" strokeWidth=\"50\" pointerEvents=\"all\"/><rect x=\"158\" y=\"15\" width=\"142\" height=\"30\" rx=\"4.5\" ry=\"4.5\" fill=\"none\" strokeWidth=\"30\" pointerEvents=\"all\"/></g></svg>\r\n\t\t\t\t<Loader loaderVisible={loaderVisible}/>\r\n\t\t\t\t<svg style={{ marginRight: '15px' }} className={`${list.length === 0 ? 'notVisible' : (settingsDisabled ? 'disabled' : '')}`} onClick={modalEditShow} width='25' viewBox=\"0 -960 960 960\" ><path d=\"M200-200h57l391-391-57-57-391 391v57Zm-80 80v-170l528-527q12-11 26.5-17t30.5-6q16 0 31 6t26 18l55 56q12 11 17.5 26t5.5 30q0 16-5.5 30.5T817-647L290-120H120Zm640-584-56-56 56 56Zm-141 85-28-29 57 57-29-28Z\"/></svg>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div style={{ display: successfullyUpdatedVisible ? 'flex' : 'none', justifyContent: 'center', marginTop: '10px' }}>\r\n\t\t\t\t<svg \r\n\t\t\t\t\theight='20' \r\n\t\t\t\t\tviewBox='0 -960 960 960'\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tfill: 'rgb(0, 255, 0)',\r\n\t\t\t\t\t}}\r\n\t\t\t\t><path d='M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z'/></svg>\r\n\t\t\t\t<p style={{ width: 'max-content', height: '100%', fontSize: '19px', margin: '0', marginLeft: '5px', color: 'rgb(0, 255, 0)' }}>Erfolgreich gespeichert!</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<dl className='sessionList'>\r\n\t\t\t\t{list.length === 0 ? (\r\n\t\t\t\t\t<dt style={{ fontSize: '25px', width: 'max-content' }}>{message}</dt>\r\n\t\t\t\t) : (\r\n\t\t\t\t\tlist.map((s, i) => (\r\n\t\t\t\t\t\t<dt className='listElement' index={i} key={i}>\r\n\t\t\t\t\t\t\t<input className='checkbox-delete' style={isMobile ? { marginTop: '7px' } : {}} type='checkbox' onChange={(e) => checkboxClick(i, e.target.checked)} />\r\n\r\n\t\t\t\t\t\t\t<div className='container' onClick={listElementClick}>\r\n\t\t\t\t\t\t\t\t<label className='label'>\r\n\t\t\t\t\t\t\t\t\t{s.List_Players.map((p) => p.Name).join(' vs ')}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<label className='label date'>{formatDate(s.LastPlayed)}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</dt>\r\n\t\t\t\t\t))\r\n\t\t\t\t)}\r\n\t\t\t</dl>\r\n\t\t\t\r\n\t\t\t<div style={{ display: 'flex'}}>\r\n\t\t\t\t<p className='link-switch'>\r\n\t\t\t\t\t<Link to='/creategame'>Erstelle Spiel</Link>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SelectSession\r\n","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\hooks\\useRefreshToken.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\hooks\\useAuth.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\api\\axios.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\hooks\\useAxiosPrivate.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\EndScreen.js",["142"],[],"\r\n\r\nimport '../App.css'\r\nimport './css/EndScreen.css'\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate'\r\n\r\nimport Loader from '../components/Loader'\r\n\r\n\r\n\r\n\r\n\r\nfunction EndScreen() {\r\n\r\n\tconst navigate = useNavigate()\r\n\tconst axiosPrivate = useAxiosPrivate()\r\n\r\n\tconst [session, setSession] = useState()\r\n\tconst [header, setHeader] = useState('')\r\n\tconst [loaderVisible, setLoaderVisible] = useState(false)\r\n\r\n\tconst location = useLocation()\r\n\tconst urlParams = new URLSearchParams(location.search)\r\n\tconst winner = JSON.parse(urlParams.get('winner'))\r\n\tconst sessionId = +urlParams.get('sessionid')\r\n\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tsetLoaderVisible(true)\r\n\r\n\t\tasync function connect() {\r\n\t\t\tawait axiosPrivate.get('/endscreen',\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\tparams: { id: sessionId },\r\n\t\t\t\t\twithCredentials: true\r\n\t\t\t\t}\r\n\t\t\t).then((res) => {\r\n\r\n\t\t\t\tsetSession(res?.data)\r\n\t\t\t\tif(!winner || !res?.data) return navigate('/creategame', { replace: true })\r\n\r\n\t\t\t\tif(winner.length === 1) {\r\n\t\t\t\t\tsetHeader(`'${winner[0]}' hat gewonnen!`)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet string = `'${winner[0]}' `\r\n\t\t\t\t\tfor(let i = 1; winner.length > i; i++) {\r\n\t\t\t\t\t\tconst p = `'${winner[i]}'`\r\n\t\t\t\t\t\tif((i + 1) === winner.length) {\r\n\t\t\t\t\t\t\tstring += ` und ${p} haben gewonnen!`\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tstring += `, ${p}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetHeader(string)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetLoaderVisible(false)\r\n\r\n\t\t\t}).catch(() => {\r\n\t\t\t\tnavigate('/creategame', { replace: true })\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconnect()\r\n\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\r\n\t\t\t<div className='button-container'>\r\n\t\t\t\t<label className='winner'>\r\n\t\t\t\t\t{header}\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\r\n\t\t\t<br/>\r\n\r\n\t\t\t<table className='table wins'>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Spieler</td>\r\n\t\t\t\t\t\t{session?.List_Players.map((p, i) => (\r\n\t\t\t\t\t\t\t<td key={i}>{p.Name}</td>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Gewonnen</td>\r\n\t\t\t\t\t\t{session?.List_Players.map((p, i) => (\r\n\t\t\t\t\t\t\t<td key={i}>{p.Wins}</td>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\r\n\t\t\t<Loader loaderVisible={loaderVisible}/>\r\n\r\n\t\t\t<button className='button' style={{ width: '100%' }} onClick={() => navigate('/creategame', { replace: false })}>Ok</button>\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default EndScreen\r\n","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\SessionPreview.js",["143","144"],[],"\r\n\r\nimport '../App.css'\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { formatDate, sessionStorage_session } from './utils'\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate'\r\nimport Loader from '../components/Loader'\r\n\r\n\r\nfunction SessionPreview() {\r\n\t\r\n\tconst navigate = useNavigate()\r\n\tconst axiosPrivate = useAxiosPrivate()\r\n\tconst location = useLocation()\r\n\tconst sessionid = new URLSearchParams(location.search).get('sessionid')\r\n\tconst [ session, setSession ] = useState()\r\n\r\n\tconst [ list, setList ] = useState([])\r\n\tconst [ wins, setWins ] = useState([])\r\n\tconst [ finalScores, setFinalScores ] = useState([])\r\n\tconst [ loaderVisible, setLoaderVisible ] = useState(false)\r\n\tconst [ showLastFinalScores, setShowLastFinalScores ] = useState()\r\n\r\n\tconst firstColumnWidth = '150px'\r\n\tconst firstColumnStyle = { width: firstColumnWidth, minWidth: firstColumnWidth, maxWidth: firstColumnWidth, padding: '5px', fontWeight: 'bold' }\r\n\tconst columnWidth = session?.List_Players?.length > 8 ? '75px' : (session?.List_Players?.length > 4 ? '125px' : '200px')\r\n\tconst style = { width: columnWidth, minWidth: columnWidth, maxWidth: columnWidth, padding: '5px', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }\r\n\r\n\t\r\n\r\n\t\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tasync function request() {\r\n\r\n\t\t\tsetLoaderVisible(true)\r\n\r\n\t\t\tawait axiosPrivate.get('/sessionpreview',\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\tparams: { id: sessionid },\r\n\t\t\t\t\twithCredentials: true\r\n\t\t\t\t}\r\n\t\t\t).then((res) => {\r\n\t\t\t\tsetSession(res.data.Session)\r\n\t\t\t\tconst l = res.data.FinalScores\r\n\t\t\t\tl.sort(sortByTimestampDesc)\r\n\t\t\t\tsetFinalScores(l)\r\n\t\t\t\tsetShowLastFinalScores('thisYear')\r\n\t\t\t}).catch((err) => {\r\n\t\t\t\tconst status = err?.response?.status\r\n\t\t\t\tif(status === 404) {\r\n\t\t\t\t\tnavigate('/selectsession', { replace: true })\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(err)\r\n\t\t\t\t\twindow.alert('Unknown error')\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tsetLoaderVisible(false)\r\n\r\n\t\t}\r\n\r\n\t\trequest()\r\n\r\n\t}, [])\r\n\r\n\tconst sortByTimestampDesc = (a, b) => {\r\n\t\treturn new Date(b.End) - new Date(a.End)\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif(showLastFinalScores === 'all') {\r\n\t\t\t\r\n\t\t\tconst allWins = {}\r\n\t\t\tsession?.List_PlayerOrder?.map((alias) => {\r\n\t\t\t\tconst player = getPlayer(alias)\r\n\t\t\t\treturn allWins[player.Alias] = player.Wins\r\n\t\t\t})\r\n\t\t\tsetWins(allWins)\r\n\t\t\treturn setList(finalScores)\r\n\r\n\t\t}\r\n\r\n\t\tconst tmp = []\r\n\t\tconst tmp_wins = {}\r\n\t\tsession?.List_PlayerOrder?.map((alias) => {\r\n\t\t\tconst player = getPlayer(alias)\r\n\t\t\treturn tmp_wins[player.Alias] = 0\r\n\t\t})\r\n\r\n\t\tconst today = new Date()\r\n\t\tconst d = today.getDay()\r\n\t\tconst m = today.getMonth()\r\n\t\tconst y = today.getFullYear()\r\n\r\n\t\tfor( const f of finalScores) {\r\n\t\t\t\r\n\t\t\tconst date = new Date(f.End)\r\n\t\t\tif(date.getFullYear() === y) {\r\n\t\t\t\tif(showLastFinalScores === 'thisMonth' && date.getMonth() !== m) continue\r\n\t\t\t\tif(showLastFinalScores === 'thisDay' && ( date.getMonth() !== m || date.getDay() !== d ) ) continue\r\n\t\t\t\t\r\n\t\t\t\tfor(const w of f.List_Winner) {\r\n\t\t\t\t\ttmp_wins[w]++\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\ttmp.push(f)\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsetWins(tmp_wins)\r\n\t\tsetList(tmp)\r\n\r\n\t}, [showLastFinalScores])\r\n\r\n\tconst getPlayer = (alias) => {\r\n\r\n\t\tfor(const p of session?.List_Players) {\r\n\t\t\tif(p.Alias === alias) {\r\n\t\t\t\treturn p\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst play = () => {\r\n\r\n\t\tsessionStorage.setItem(sessionStorage_session, JSON.stringify(session))\r\n\t\tnavigate('/game', { replace: true })\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div style={{ overflow: 'hidden', scrollbarGutter: 'stable both-edges' }}>\r\n\t\t\t\t<table className='table'>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td style={firstColumnStyle}>Spieler</td>\r\n\t\t\t\t\t\t\t{session?.List_PlayerOrder?.map((alias, i) => {\r\n\t\t\t\t\t\t\t\tconst player = getPlayer(alias)\r\n\t\t\t\t\t\t\t\treturn (<td key={i} style={style}>{player.Name}</td>)\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td style={{ width: firstColumnWidth, minWidth: firstColumnWidth, maxWidth: firstColumnWidth, padding: '5px', fontWeight: 'bold' }}>\r\n\t\t\t\t\t\t\t\tGewonnen<br/>\r\n\t\t\t\t\t\t\t\t<select \r\n\t\t\t\t\t\t\t\t\tvalue={showLastFinalScores}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setShowLastFinalScores(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tstyle={{ \r\n\t\t\t\t\t\t\t\t\t\tcolor: 'var(--text-color)', \r\n\t\t\t\t\t\t\t\t\t\tborder: 'none', \r\n\t\t\t\t\t\t\t\t\t\toutline: 'none',\r\n\t\t\t\t\t\t\t\t\t\tbackground: 'none',\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<option value='all'>Gesamt</option>\r\n\t\t\t\t\t\t\t\t\t<option value='thisYear'>Dieses Jahr</option>\r\n\t\t\t\t\t\t\t\t\t<option value='thisMonth'>Dieser Monat</option>\r\n\t\t\t\t\t\t\t\t\t<option value='thisDay'>Dieser Tag</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t{session?.List_PlayerOrder?.map((alias, i) => {\r\n\t\t\t\t\t\t\t\tconst player = getPlayer(alias)\r\n\t\t\t\t\t\t\t\treturn (<td key={i} style={style}>{wins[player.Alias]}</td>)\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div style={{ maxHeight: '305px', overflowY: 'auto', overflowX: 'hidden', scrollbarGutter: 'stable both-edges' }}>\r\n\t\t\t\t<table className='table'>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{list?.map((fs, i) => (\r\n\t\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t\t\t<td style={firstColumnStyle}>{formatDate(fs.End)}</td>\r\n\t\t\t\t\t\t\t\t{session?.List_PlayerOrder?.map((alias, j) => {\r\n\t\t\t\t\t\t\t\t\tconst player = getPlayer(alias)\r\n\t\t\t\t\t\t\t\t\treturn (<td key={`${i}.${j}`} style={style}>{fs.PlayerScores[player.Alias]}</td>)\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<Loader loaderVisible={loaderVisible}/>\r\n\t\t\t\t\r\n\t\t\t<button className='button' style={{ height: '40px', width: '100%', marginBottom: '0px' }} onClick={play}>Los geht's!</button>\r\n\r\n\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\t\t\t\t<p className='link-switch'>\r\n\t\t\t\t\t<Link to='/selectsession'>Zurück</Link>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className='link-switch'>\r\n\t\t\t\t\t<Link to='/sessionanalytics'>Mehr {'>'}</Link>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SessionPreview\r\n","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\PossibleEntries.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\utils-env.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\SessionAnalytics.js",["145","146","147","148","149","150","151","152"],[],"\r\n\r\nimport '../App.css'\r\n\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { formatDate, sessionStorage_finalscores, sessionStorage_session } from './utils'\r\nimport { useEffect, useState } from 'react'\r\n\r\n\r\n\r\n\r\n\r\nfunction SessionAnalytics() {\r\n\r\n\tconst navigate = useNavigate()\r\n\r\n\tconst [session, setSession] = useState()\r\n\tconst [finalScores, setFinalScores] = useState()\r\n\r\n\tconst [list, setList] = useState([])\r\n\tconst [wins, setWins] = useState([])\r\n\tconst [availableYears, setAvailableYears] = useState([])\r\n\tconst [showFinalScores, setShowFinalScores] = useState()\r\n\r\n\tconst firstColumnWidth = '150px'\r\n\tconst firstColumnStyle = { width: firstColumnWidth, minWidth: firstColumnWidth, maxWidth: firstColumnWidth, padding: '5px', fontWeight: 'bold' }\r\n\tconst columnWidth = session?.List_Players?.length > 8 ? '75px' : (session?.List_Players?.length > 4 ? '125px' : '200px')\r\n\tconst style = { width: columnWidth, minWidth: columnWidth, maxWidth: columnWidth, padding: '5px', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\t// if(!session || !session.List_Players) return navigate('/creategame', { replace: true })\r\n\r\n\r\n\r\n\t}, [])\r\n\r\n\tconst continueToGame = () => {\r\n\r\n\t\tsessionStorage.removeItem(sessionStorage_finalscores)\r\n\t\tnavigate('/game', { replace: true })\r\n\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\r\n\t\t\t<div style={{ overflow: 'hidden', scrollbarGutter: 'stable both-edges' }}>\r\n\t\t\t\t<table className='table'>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td style={firstColumnStyle}>Spieler</td>\r\n\t\t\t\t\t\t\t{session?.List_Players?.map((p, i) => (\r\n\t\t\t\t\t\t\t\t<td key={i} style={style}>{p.Name}</td>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td style={{ width: firstColumnWidth, minWidth: firstColumnWidth, maxWidth: firstColumnWidth, padding: '5px', fontWeight: 'bold' }}>\r\n\t\t\t\t\t\t\t\tGewonnen<br/>\r\n\t\t\t\t\t\t\t\t<select \r\n\t\t\t\t\t\t\t\t\tvalue={showFinalScores}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setShowFinalScores(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tstyle={{ \r\n\t\t\t\t\t\t\t\t\t\tcolor: 'var(--text-color)', \r\n\t\t\t\t\t\t\t\t\t\tborder: 'none', \r\n\t\t\t\t\t\t\t\t\t\toutline: 'none',\r\n\t\t\t\t\t\t\t\t\t\tbackground: 'none',\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<option value='all'>Gesamt</option>\r\n\t\t\t\t\t\t\t\t\t<option value='thisYear'>Dieses Jahr</option>\r\n\t\t\t\t\t\t\t\t\t<option value='thisMonth'>Dieser Monat</option>\r\n\t\t\t\t\t\t\t\t\t<option value='thisDay'>Dieser Tag</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t{wins.map((w, i) => (\r\n\t\t\t\t\t\t\t\t<td key={i} style={style}>\r\n\t\t\t\t\t\t\t\t\t{w}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div style={{ maxHeight: '305px', overflowY: 'auto', overflowX: 'hidden', scrollbarGutter: 'stable both-edges' }}>\r\n\t\t\t\t<table className='table'>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{list?.map((fs, i) => (\r\n\t\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t\t\t<td style={firstColumnStyle}>{formatDate(fs.Played)}</td>\r\n\t\t\t\t\t\t\t\t{session?.List_Players?.map((p, j) => (\r\n\t\t\t\t\t\t\t\t\t<td key={`${i}.${j}`} style={style}>{fs[p.Alias]}</td>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\r\n\t\t\t<button className='button' style={{ height: '40px', width: '100%', marginBottom: '0px' }} onClick={continueToGame}>Los geht's!</button>\r\n\r\n\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\t\t\t\t<p className='link-switch'>\r\n\t\t\t\t\t<Link to='/sessionpreview' onClick={''}>Zurück</Link>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\r\n\t\t</>\r\n\t)\r\n\r\n}\r\n\r\nexport default SessionAnalytics\r\n","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\components\\Loader.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\components\\info\\InfoName.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\components\\info\\InfoPassword.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\components\\info\\InfoPasswordMatch.js",[],[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":50,"column":5,"nodeType":"157","endLine":50,"endColumn":7,"suggestions":"158"},{"ruleId":"155","severity":1,"message":"159","line":31,"column":5,"nodeType":"157","endLine":31,"endColumn":7,"suggestions":"160"},{"ruleId":"155","severity":1,"message":"161","line":69,"column":5,"nodeType":"157","endLine":69,"endColumn":7,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":10,"column":61,"nodeType":"165","messageId":"166","endLine":10,"endColumn":85},{"ruleId":"155","severity":1,"message":"167","line":119,"column":5,"nodeType":"157","endLine":119,"endColumn":7,"suggestions":"168"},{"ruleId":"155","severity":1,"message":"169","line":35,"column":31,"nodeType":"157","endLine":35,"endColumn":33,"suggestions":"170"},{"ruleId":"155","severity":1,"message":"171","line":74,"column":5,"nodeType":"157","endLine":74,"endColumn":7,"suggestions":"172"},{"ruleId":"155","severity":1,"message":"173","line":69,"column":5,"nodeType":"157","endLine":69,"endColumn":7,"suggestions":"174"},{"ruleId":"155","severity":1,"message":"175","line":124,"column":5,"nodeType":"157","endLine":124,"endColumn":26,"suggestions":"176"},{"ruleId":"163","severity":1,"message":"177","line":6,"column":50,"nodeType":"165","messageId":"166","endLine":6,"endColumn":72},{"ruleId":"163","severity":1,"message":"178","line":17,"column":18,"nodeType":"165","messageId":"166","endLine":17,"endColumn":28},{"ruleId":"163","severity":1,"message":"179","line":18,"column":9,"nodeType":"165","messageId":"166","endLine":18,"endColumn":20},{"ruleId":"163","severity":1,"message":"180","line":18,"column":22,"nodeType":"165","messageId":"166","endLine":18,"endColumn":36},{"ruleId":"163","severity":1,"message":"181","line":20,"column":15,"nodeType":"165","messageId":"166","endLine":20,"endColumn":22},{"ruleId":"163","severity":1,"message":"182","line":21,"column":15,"nodeType":"165","messageId":"166","endLine":21,"endColumn":22},{"ruleId":"163","severity":1,"message":"183","line":22,"column":9,"nodeType":"165","messageId":"166","endLine":22,"endColumn":23},{"ruleId":"163","severity":1,"message":"184","line":22,"column":25,"nodeType":"165","messageId":"166","endLine":22,"endColumn":42},"no-new-object",["185"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axiosPrivate' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["186"],"React Hook useEffect has missing dependencies: 'auth?.accessToken', 'navigate', and 'refresh'. Either include them or remove the dependency array.",["187"],"React Hook useEffect has missing dependencies: 'axiosPrivate', 'columns', 'navigate', and 'players.length'. Either include them or remove the dependency array.",["188"],"no-unused-vars","'sessionStorage_inputType' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'axiosPrivate', 'calculateBottomColumn', 'calculateUpperColumn', 'focusEvent', 'inputType', 'navigate', 'onblurEvent', and 'session'. Either include them or remove the dependency array.",["189"],"React Hook useEffect has a missing dependency: 'request'. Either include it or remove the dependency array.",["190"],"React Hook useEffect has missing dependencies: 'axiosPrivate', 'navigate', 'sessionId', and 'winner'. Either include them or remove the dependency array.",["191"],"React Hook useEffect has missing dependencies: 'axiosPrivate', 'navigate', and 'sessionid'. Either include them or remove the dependency array.",["192"],"React Hook useEffect has missing dependencies: 'finalScores', 'getPlayer', and 'session?.List_PlayerOrder'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setList' needs the current value of 'finalScores'.",["193"],"'sessionStorage_session' is defined but never used.","'setSession' is assigned a value but never used.","'finalScores' is assigned a value but never used.","'setFinalScores' is assigned a value but never used.","'setList' is assigned a value but never used.","'setWins' is assigned a value but never used.","'availableYears' is assigned a value but never used.","'setAvailableYears' is assigned a value but never used.","no-object-constructor",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},"Update the dependencies array to be: [axiosPrivate, navigate]",{"range":"210","text":"211"},"Update the dependencies array to be: [auth?.accessToken, navigate, refresh]",{"range":"212","text":"213"},"Update the dependencies array to be: [axiosPrivate, columns, navigate, players.length]",{"range":"214","text":"215"},"Update the dependencies array to be: [axiosPrivate, calculateBottomColumn, calculateUpperColumn, focusEvent, inputType, navigate, onblurEvent, session]",{"range":"216","text":"217"},"Update the dependencies array to be: [request]",{"range":"218","text":"219"},"Update the dependencies array to be: [axiosPrivate, navigate, sessionId, winner]",{"range":"220","text":"221"},"Update the dependencies array to be: [axiosPrivate, navigate, sessionid]",{"range":"222","text":"223"},"Update the dependencies array to be: [finalScores, getPlayer, session?.List_PlayerOrder, showLastFinalScores]",{"range":"224","text":"225"},[1341,1343],"[axiosPrivate, navigate]",[731,733],"[auth?.accessToken, navigate, refresh]",[1795,1797],"[axiosPrivate, columns, navigate, players.length]",[3678,3680],"[axiosPrivate, calculateBottomColumn, calculateUpperColumn, focusEvent, inputType, navigate, onblurEvent, session]",[1080,1082],"[request]",[1639,1641],"[axiosPrivate, navigate, sessionId, winner]",[2063,2065],"[axiosPrivate, navigate, sessionid]",[3194,3215],"[finalScores, getPlayer, session?.List_PlayerOrder, showLastFinalScores]"]