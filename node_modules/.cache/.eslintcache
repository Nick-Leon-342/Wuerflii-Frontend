[{"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\index.js":"1","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\App.js":"2","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\reportWebVitals.js":"3","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\context\\AuthProvider.js":"4","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\Registration.js":"5","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\utils.js":"6","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\Login.js":"7","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\CreateGame.js":"8","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\PersistLogin.js":"9","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\EnterNames.js":"10","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\Game.js":"11","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\SelectSession.js":"12","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\hooks\\useRefreshToken.js":"13","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\hooks\\useAuth.js":"14","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\api\\axios.js":"15","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\hooks\\useAxiosPrivate.js":"16","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\EndScreen.js":"17","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\SessionPreview.js":"18","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\PossibleEntries.js":"19","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\utils-env.js":"20","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\SessionAnalytics.js":"21","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\components\\Loader.js":"22","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\components\\info\\InfoName.js":"23","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\components\\info\\InfoPassword.js":"24","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\components\\info\\InfoPasswordMatch.js":"25"},{"size":620,"mtime":1699188179825,"results":"26","hashOfConfig":"27"},{"size":1797,"mtime":1698617420776,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1697222523094,"results":"29","hashOfConfig":"27"},{"size":358,"mtime":1697222523085,"results":"30","hashOfConfig":"27"},{"size":10698,"mtime":1699521269311,"results":"31","hashOfConfig":"27"},{"size":1574,"mtime":1699822158347,"results":"32","hashOfConfig":"27"},{"size":3900,"mtime":1699427119795,"results":"33","hashOfConfig":"27"},{"size":13103,"mtime":1699822129030,"results":"34","hashOfConfig":"27"},{"size":777,"mtime":1699822182080,"results":"35","hashOfConfig":"27"},{"size":4059,"mtime":1699799496345,"results":"36","hashOfConfig":"27"},{"size":41759,"mtime":1699822388282,"results":"37","hashOfConfig":"27"},{"size":10934,"mtime":1699470592509,"results":"38","hashOfConfig":"27"},{"size":503,"mtime":1697222523086,"results":"39","hashOfConfig":"27"},{"size":318,"mtime":1697222523086,"results":"40","hashOfConfig":"27"},{"size":320,"mtime":1698519377671,"results":"41","hashOfConfig":"27"},{"size":1527,"mtime":1699808012364,"results":"42","hashOfConfig":"27"},{"size":2373,"mtime":1699468479868,"results":"43","hashOfConfig":"27"},{"size":5824,"mtime":1699822230796,"results":"44","hashOfConfig":"27"},{"size":808,"mtime":1698346096277,"results":"45","hashOfConfig":"27"},{"size":377,"mtime":1699559840795,"results":"46","hashOfConfig":"27"},{"size":3286,"mtime":1699822259148,"results":"47","hashOfConfig":"27"},{"size":192,"mtime":1699395024885,"results":"48","hashOfConfig":"27"},{"size":1370,"mtime":1699521983340,"results":"49","hashOfConfig":"27"},{"size":1517,"mtime":1699521975633,"results":"50","hashOfConfig":"27"},{"size":1136,"mtime":1699521061225,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1ohar6t",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"55"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"55"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\index.js",[],[],["130"],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\App.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\reportWebVitals.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\context\\AuthProvider.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\Registration.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\utils.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\Login.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\CreateGame.js",["131"],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\PersistLogin.js",["132"],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\EnterNames.js",["133"],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\Game.js",["134","135","136"],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\SelectSession.js",["137"],[],"\r\n\r\nimport '../App.css'\r\nimport './css/SelectSession.css'\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { formatDate } from './utils'\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate'\r\nimport { isMobile } from 'react-device-detect'\r\nimport Loader from '../components/Loader'\r\n\r\n\r\nfunction SelectSession() {\r\n\r\n\tconst navigate = useNavigate()\r\n\tconst axiosPrivate = useAxiosPrivate()\r\n\r\n\tconst [list, setList] = useState([])\r\n\tconst [list_checkbox] = useState([])\r\n\tconst [trashcanDisabled, setTrashcanDisabled] = useState(true)\r\n\tconst [settingsDisabled, setSettingsDisabled] = useState(true)\r\n\tconst [session, setSession] = useState('')\r\n\tconst [list_session, setList_Session] = useState([])\r\n\tconst [loaderVisible, setLoaderVisible] = useState(false)\r\n\tconst [dialog_loaderVisible, setDialog_loaderVisible] = useState(false)\r\n\tconst [successfullyUpdatedVisible, setSuccessfullyUpdatedVisible] = useState(false)\r\n\t\r\n\tconst message = 'Es gibt noch keine Partie!'\r\n\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {request()}, [])\r\n\r\n\tasync function request() {\r\n\r\n\t\tsetLoaderVisible(true)\r\n\r\n\t\tawait axiosPrivate.get('/selectsession').then((res) => {\r\n\r\n\t\t\tconst l = res.data\r\n\t\t\tl.sort(sortByTimestampDesc)\r\n\t\t\tsetList(l)\r\n\r\n\t\t}).catch((err) => {\r\n\t\t\tconsole.log(err)\r\n\t\t})\r\n\r\n\t\tsetLoaderVisible(false)\r\n\r\n\t}\r\n\r\n\tconst sortByTimestampDesc = (a, b) => {\r\n\t\treturn new Date(b.LastPlayed) - new Date(a.LastPlayed)\r\n\t}\r\n\r\n\tconst getPlayer = (alias) => {\r\n\r\n\t\tfor(const p of session?.List_Players) {\r\n\t\t\tif(p.Alias === alias) {\r\n\t\t\t\treturn p\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\r\n\r\n\r\n\r\n\t// __________________________________________________ListElement__________________________________________________\r\n\r\n\tconst listElementClick = (element) => {\r\n\t\t\r\n\t\tconst i = element.target.closest('dt').getAttribute('index')\r\n\t\tnavigate(`/sessionpreview?sessionid=${list[i].id}`, { replace: false })\r\n\r\n\t}\r\n\r\n\tconst checkboxClick = (index, checked) => {\r\n\r\n\t\tlist_checkbox[index] = checked\r\n\r\n\t\tlet counter = 0\r\n\t\tfor(let i = 0; list_checkbox.length > i; i++) {\r\n\t\t\tif(list_checkbox[i]) {\r\n\t\t\t\tcounter++\r\n\t\t\t\tsetSession(list[i])\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetSettingsDisabled(counter !== 1)\r\n\r\n\t\tif(checked) {\r\n\t\t\tsetTrashcanDisabled(false)\r\n\t\t} else {\r\n\t\t\tfor(const e of list_checkbox) {\r\n\t\t\t\tif(e) return\r\n\t\t\t}\r\n\t\t\tsetTrashcanDisabled(true)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t// __________________________________________________Modal-Delete__________________________________________________\r\n\r\n\tconst modalDeleteShow = async () => {\r\n\r\n\t\tif(trashcanDisabled) return\r\n\t\tdocument.getElementById('modal-delete').showModal()\r\n\t\t\r\n\t}\r\n\r\n\tconst modalDeleteSubmit = async () => {\r\n\r\n\t\tmodalDeleteClose()\r\n\t\tsetLoaderVisible(true)\r\n\r\n\t\tfor(let i = 0; list_checkbox.length > i; i++) {\r\n\t\t\tif(list_checkbox[i]) {\r\n\t\t\t\tawait axiosPrivate.delete('/selectsession',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\t\twithCredentials: true,\r\n\t\t\t\t\t\tparams: { id: list[i].id }\r\n\t\t\t\t\t}\r\n\t\t\t\t).catch((err) => {\r\n\t\t\t\t\tconsole.log(err)\r\n\t\t\t\t})\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetLoaderVisible(false)\r\n\t\twindow.location.reload()\r\n\r\n\t}\r\n\r\n\tconst modalDeleteClose = () => {\r\n\t\tdocument.getElementById('modal-delete').close()\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t// __________________________________________________Modal-Edit__________________________________________________\r\n\r\n\tconst [columns, setColumns] = useState('')\r\n\tconst maxColumns = process.env.REACT_APP_MAX_COLUMNS || 10\r\n\tconst options_columns = Array.from({ length: maxColumns }, (_, index) => index + 1)\r\n\r\n\tconst modalEditHandleColumnChange = (event) => {\r\n\r\n\t\tconst intValue = event.target.value\r\n\t\tif (isNaN(parseInt(intValue.substr(intValue.length - 1))) || intValue < 1 || parseInt(intValue) > maxColumns) {return setColumns(intValue.slice(0, -1))}\r\n\t\tsetColumns(intValue)\r\n\r\n\t}\r\n\r\n\tconst modalEditShow = () => {\r\n\r\n\t\tconst tmp = []\r\n\r\n\t\tfor(const alias of session.List_PlayerOrder) {\r\n\t\t\ttmp.push(getPlayer(alias))\r\n\t\t}\r\n\r\n\t\tsetSuccessfullyUpdatedVisible(false)\r\n\t\tsetList_Session(tmp)\r\n\t\tdocument.getElementById('modal-edit').showModal()\r\n\r\n\t}\r\n\r\n\tconst modalEditClose = () => {\r\n\t\t\r\n\t\tsetList_Session([])\r\n\t\tsetColumns('')\r\n\t\tdocument.getElementById('modal-edit').close()\r\n\r\n\t}\r\n\r\n\tconst modalEditSave = async () => {\r\n\r\n\t\tsetDialog_loaderVisible(true)\r\n\r\n\t\tconst json = { id: session?.id, List_Players: [] }\r\n\t\tif(columns !== '') {\r\n\t\t\tjson['Columns'] = columns\r\n\t\t\tsession.Columns = columns\r\n\t\t}\r\n\t\tfor(const p of list_session) {\r\n\t\t\tconst player = getPlayer(p.Alias)\r\n\t\t\tplayer.Name = p.Name\r\n\t\t\tplayer.Color = p.Color\r\n\t\t\tjson.List_Players.push({\r\n\t\t\t\tid: p.id,\r\n\t\t\t\tName: p.Name,\r\n\t\t\t\tColor: p.Color,\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tawait axiosPrivate.post('/selectsession', \r\n\t\t\tJSON.stringify(json),\r\n\t\t\t{\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\twithCredentials: true\r\n\t\t\t}\r\n\t\t).then(() => {\r\n\t\t\tsetSuccessfullyUpdatedVisible(true)\r\n\t\t\tmodalEditClose()\r\n\t\t\trequest()\r\n\t\t}).catch((err) => {\r\n\t\t\treturn console.log(err)\r\n\t\t})\r\n\t\t\r\n\t\tsetDialog_loaderVisible(false)\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t{/* __________________________________________________Dialogs__________________________________________________ */}\r\n\r\n\t\t\t<dialog id='modal-edit' className='modal'>\r\n\t\t\t\t<div \r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\twidth: '',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n\t\t\t\t\t\t<svg onClick={modalEditClose} height='24' viewBox='0 -960 960 960'><path d='m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z'/></svg>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h1>Bearbeiten</h1>\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t{/* ______________________________ChangeColumns______________________________ */}\r\n\t\t\t\t\t<div className='input-container' style={{ marginBottom: '20px' }}>\r\n\t\t\t\t\t\t<label className='input-header'>Spalten</label>\r\n\t\t\t\t\t\t{isMobile ? (\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tclassName='input-mobile'\r\n\t\t\t\t\t\t\t\tonChange={modalEditHandleColumnChange}\r\n\t\t\t\t\t\t\t\tvalue={columns}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value='' disabled>\r\n\t\t\t\t\t\t\t\t\tSpaltenanzahl\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t{options_columns.map((c) => (\r\n\t\t\t\t\t\t\t\t\t<option key={c} value={c}>{c}</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\tclassName='input-computer' \r\n\t\t\t\t\t\t\t\t\tlist='columns'\r\n\t\t\t\t\t\t\t\t\tplaceholder={session?.Attributes?.Columns}\r\n\t\t\t\t\t\t\t\t\tonChange={modalEditHandleColumnChange}\r\n\t\t\t\t\t\t\t\t\tvalue={columns}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<datalist id='columns'>\r\n\t\t\t\t\t\t\t\t\t{options_columns.map((c) => {\r\n\t\t\t\t\t\t\t\t\t\treturn <option key={c} value={c} />\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</datalist>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t{/* ______________________________ChangeNames______________________________ */}\r\n\t\t\t\t\t<dl id='enterNamesList'>\r\n\t\t\t\t\t\t{list_session.map((p, index) => (\r\n\t\t\t\t\t\t\t<dt className='enterNamesElement' key={index}>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tdefaultValue={p.Name}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => p.Name = e.target.value}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName={isMobile ? 'colorbox-mobile' : 'colorbox-computer'}\r\n\t\t\t\t\t\t\t\t\ttype='color'\r\n\t\t\t\t\t\t\t\t\tdefaultValue={p.Color}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => p.Color = e.target.value}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</dt>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</dl>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className={`loader ${dialog_loaderVisible ? '' : 'notVisible'}`}>\r\n\t\t\t\t\t\t<span/>\r\n\t\t\t\t\t\t<span/>\r\n\t\t\t\t\t\t<span/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<button className='button' onClick={modalEditSave} style={{ width: '100%' }}>Speichern</button>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</dialog>\r\n\r\n\t\t\t<dialog id='modal-delete' className='modal'>\r\n\t\t\t\t<p style={{ fontSize: '22px', marginTop: '20px' }}>\r\n\t\t\t\t\tBist du sicher, dass du<br/>diese Session(s) löschen möchtest?\r\n\t\t\t\t</p>\r\n\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName='button' \r\n\t\t\t\t\t\tonClick={modalDeleteSubmit}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: '60%',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>Ja</button>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName='button' \r\n\t\t\t\t\t\tonClick={modalDeleteClose}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: 'rgb(255, 0, 0)',\r\n\t\t\t\t\t\t\tcolor: 'white',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>Abbrechen</button>\r\n\t\t\t\t</div>\r\n\t\t\t</dialog>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{/* __________________________________________________Page__________________________________________________ */}\r\n\r\n\t\t\t<div className={`trashcan-container`}>\r\n\t\t\t\t<svg style={{ marginLeft: '11px', marginRight: '3px' }} className={`${list.length === 0 ? 'notVisible' : (trashcanDisabled ? 'disabled' : '')}`} onClick={modalDeleteShow} width='25' viewBox=\"-0.5 -0.5 458 510\"><g><rect x=\"58\" y=\"55\" width=\"340\" height=\"440\" rx=\"51\" ry=\"51\" fill=\"none\" strokeWidth=\"30\" pointerEvents=\"all\"/><rect x=\"15\" y=\"55\" width=\"427\" height=\"30\" rx=\"4.5\" ry=\"4.5\" fill=\"none\" strokeWidth=\"30\" pointerEvents=\"all\"/><rect x=\"125\" y=\"145\" width=\"50\" height=\"280\" rx=\"9\" ry=\"9\" fill=\"none\" strokeWidth=\"50\" pointerEvents=\"all\"/><rect x=\"275\" y=\"145\" width=\"50\" height=\"280\" rx=\"9\" ry=\"9\" fill=\"none\" strokeWidth=\"50\" pointerEvents=\"all\"/><rect x=\"158\" y=\"15\" width=\"142\" height=\"30\" rx=\"4.5\" ry=\"4.5\" fill=\"none\" strokeWidth=\"30\" pointerEvents=\"all\"/></g></svg>\r\n\t\t\t\t<Loader loaderVisible={loaderVisible}/>\r\n\t\t\t\t<svg style={{ marginRight: '15px' }} className={`${list.length === 0 ? 'notVisible' : (settingsDisabled ? 'disabled' : '')}`} onClick={modalEditShow} width='25' viewBox=\"0 -960 960 960\" ><path d=\"M200-200h57l391-391-57-57-391 391v57Zm-80 80v-170l528-527q12-11 26.5-17t30.5-6q16 0 31 6t26 18l55 56q12 11 17.5 26t5.5 30q0 16-5.5 30.5T817-647L290-120H120Zm640-584-56-56 56 56Zm-141 85-28-29 57 57-29-28Z\"/></svg>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div style={{ display: successfullyUpdatedVisible ? 'flex' : 'none', justifyContent: 'center', marginTop: '10px' }}>\r\n\t\t\t\t<svg \r\n\t\t\t\t\theight='20' \r\n\t\t\t\t\tviewBox='0 -960 960 960'\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tfill: 'rgb(0, 255, 0)',\r\n\t\t\t\t\t}}\r\n\t\t\t\t><path d='M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z'/></svg>\r\n\t\t\t\t<p style={{ width: 'max-content', height: '100%', fontSize: '19px', margin: '0', marginLeft: '5px', color: 'rgb(0, 255, 0)' }}>Erfolgreich gespeichert!</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<dl className='sessionList'>\r\n\t\t\t\t{list.length === 0 ? (\r\n\t\t\t\t\t<dt style={{ fontSize: '25px', width: 'max-content' }}>{message}</dt>\r\n\t\t\t\t) : (\r\n\t\t\t\t\tlist.map((s, i) => (\r\n\t\t\t\t\t\t<dt className='listElement' index={i} key={i}>\r\n\t\t\t\t\t\t\t<input className='checkbox-delete' style={isMobile ? { marginTop: '7px' } : {}} type='checkbox' onChange={(e) => checkboxClick(i, e.target.checked)} />\r\n\r\n\t\t\t\t\t\t\t<div className='container' onClick={listElementClick}>\r\n\t\t\t\t\t\t\t\t<label className='label'>\r\n\t\t\t\t\t\t\t\t\t{s.List_Players.map((p) => p.Name).join(' vs ')}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<label className='label date'>{formatDate(s.LastPlayed)}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</dt>\r\n\t\t\t\t\t))\r\n\t\t\t\t)}\r\n\t\t\t</dl>\r\n\t\t\t\r\n\t\t\t<div style={{ display: 'flex'}}>\r\n\t\t\t\t<p className='link-switch'>\r\n\t\t\t\t\t<Link to='/creategame'>Erstelle Spiel</Link>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SelectSession\r\n","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\hooks\\useRefreshToken.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\hooks\\useAuth.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\api\\axios.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\hooks\\useAxiosPrivate.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\EndScreen.js",["138"],[],"\r\n\r\nimport '../App.css'\r\nimport './css/EndScreen.css'\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate'\r\n\r\nimport Loader from '../components/Loader'\r\n\r\n\r\n\r\n\r\n\r\nfunction EndScreen() {\r\n\r\n\tconst navigate = useNavigate()\r\n\tconst axiosPrivate = useAxiosPrivate()\r\n\r\n\tconst [session, setSession] = useState()\r\n\tconst [header, setHeader] = useState('')\r\n\tconst [loaderVisible, setLoaderVisible] = useState(false)\r\n\r\n\tconst location = useLocation()\r\n\tconst urlParams = new URLSearchParams(location.search)\r\n\tconst winner = JSON.parse(urlParams.get('winner'))\r\n\tconst sessionId = +urlParams.get('sessionid')\r\n\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tsetLoaderVisible(true)\r\n\r\n\t\tasync function connect() {\r\n\t\t\tawait axiosPrivate.get('/endscreen',\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\tparams: { id: sessionId },\r\n\t\t\t\t\twithCredentials: true\r\n\t\t\t\t}\r\n\t\t\t).then((res) => {\r\n\r\n\t\t\t\tsetSession(res?.data)\r\n\t\t\t\tif(!winner || !res?.data) return navigate('/creategame', { replace: true })\r\n\r\n\t\t\t\tif(winner.length === 1) {\r\n\t\t\t\t\tsetHeader(`'${winner[0]}' hat gewonnen!`)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet string = `'${winner[0]}' `\r\n\t\t\t\t\tfor(let i = 1; winner.length > i; i++) {\r\n\t\t\t\t\t\tconst p = `'${winner[i]}'`\r\n\t\t\t\t\t\tif((i + 1) === winner.length) {\r\n\t\t\t\t\t\t\tstring += ` und ${p} haben gewonnen!`\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tstring += `, ${p}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetHeader(string)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetLoaderVisible(false)\r\n\r\n\t\t\t}).catch(() => {\r\n\t\t\t\tnavigate('/creategame', { replace: true })\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconnect()\r\n\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\r\n\t\t\t<div className='button-container'>\r\n\t\t\t\t<label className='winner'>\r\n\t\t\t\t\t{header}\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\r\n\t\t\t<br/>\r\n\r\n\t\t\t<table className='table wins'>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Spieler</td>\r\n\t\t\t\t\t\t{session?.List_Players.map((p, i) => (\r\n\t\t\t\t\t\t\t<td key={i}>{p.Name}</td>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Gewonnen</td>\r\n\t\t\t\t\t\t{session?.List_Players.map((p, i) => (\r\n\t\t\t\t\t\t\t<td key={i}>{p.Wins}</td>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\r\n\t\t\t<Loader loaderVisible={loaderVisible}/>\r\n\r\n\t\t\t<button className='button' style={{ width: '100%' }} onClick={() => navigate('/creategame', { replace: false })}>Ok</button>\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default EndScreen\r\n","C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\SessionPreview.js",["139","140"],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\PossibleEntries.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\utils-env.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\pages\\SessionAnalytics.js",["141","142","143","144","145","146","147"],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\components\\Loader.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\components\\info\\InfoName.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\components\\info\\InfoPassword.js",[],[],"C:\\Users\\nickl\\Desktop\\Git Projects\\kniffel\\src\\components\\info\\InfoPasswordMatch.js",[],[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":48,"column":5,"nodeType":"152","endLine":48,"endColumn":7,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"154","line":29,"column":5,"nodeType":"152","endLine":29,"endColumn":7,"suggestions":"155"},{"ruleId":"150","severity":1,"message":"156","line":69,"column":5,"nodeType":"152","endLine":69,"endColumn":7,"suggestions":"157"},{"ruleId":"150","severity":1,"message":"158","line":61,"column":2,"nodeType":"159","endLine":61,"endColumn":17,"suggestions":"160"},{"ruleId":"150","severity":1,"message":"161","line":102,"column":5,"nodeType":"152","endLine":102,"endColumn":14,"suggestions":"162"},{"ruleId":"150","severity":1,"message":"163","line":134,"column":5,"nodeType":"152","endLine":134,"endColumn":7,"suggestions":"164"},{"ruleId":"150","severity":1,"message":"165","line":35,"column":31,"nodeType":"152","endLine":35,"endColumn":33,"suggestions":"166"},{"ruleId":"150","severity":1,"message":"167","line":74,"column":5,"nodeType":"152","endLine":74,"endColumn":7,"suggestions":"168"},{"ruleId":"150","severity":1,"message":"169","line":69,"column":5,"nodeType":"152","endLine":69,"endColumn":7,"suggestions":"170"},{"ruleId":"150","severity":1,"message":"171","line":124,"column":5,"nodeType":"152","endLine":124,"endColumn":26,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":17,"column":18,"nodeType":"159","messageId":"175","endLine":17,"endColumn":28},{"ruleId":"173","severity":1,"message":"176","line":18,"column":9,"nodeType":"159","messageId":"175","endLine":18,"endColumn":20},{"ruleId":"173","severity":1,"message":"177","line":18,"column":22,"nodeType":"159","messageId":"175","endLine":18,"endColumn":36},{"ruleId":"173","severity":1,"message":"178","line":20,"column":15,"nodeType":"159","messageId":"175","endLine":20,"endColumn":22},{"ruleId":"173","severity":1,"message":"179","line":21,"column":15,"nodeType":"159","messageId":"175","endLine":21,"endColumn":22},{"ruleId":"173","severity":1,"message":"180","line":22,"column":9,"nodeType":"159","messageId":"175","endLine":22,"endColumn":23},{"ruleId":"173","severity":1,"message":"181","line":22,"column":25,"nodeType":"159","messageId":"175","endLine":22,"endColumn":42},"no-new-object",["182"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axiosPrivate' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["183"],"React Hook useEffect has missing dependencies: 'auth?.accessToken', 'navigate', and 'refresh'. Either include them or remove the dependency array.",["184"],"React Hook useEffect has missing dependencies: 'axiosPrivate', 'columns', 'navigate', and 'players.length'. Either include them or remove the dependency array.",["185"],"React Hook useLayoutEffect contains a call to 'setTableWidth'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useLayoutEffect Hook.","Identifier",["186"],"React Hook useEffect has missing dependencies: 'calculateBottomColumn', 'calculateUpperColumn', 'focusEvent', 'inputType', and 'onblurEvent'. Either include them or remove the dependency array.",["187"],"React Hook useEffect has missing dependencies: 'axiosPrivate', 'joincode', 'navigate', and 'sessionid'. Either include them or remove the dependency array.",["188"],"React Hook useEffect has a missing dependency: 'request'. Either include it or remove the dependency array.",["189"],"React Hook useEffect has missing dependencies: 'axiosPrivate', 'navigate', 'sessionId', and 'winner'. Either include them or remove the dependency array.",["190"],"React Hook useEffect has missing dependencies: 'axiosPrivate', 'navigate', and 'sessionid'. Either include them or remove the dependency array.",["191"],"React Hook useEffect has missing dependencies: 'finalScores', 'getPlayer', and 'session?.List_PlayerOrder'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setList' needs the current value of 'finalScores'.",["192"],"no-unused-vars","'setSession' is assigned a value but never used.","unusedVar","'finalScores' is assigned a value but never used.","'setFinalScores' is assigned a value but never used.","'setList' is assigned a value but never used.","'setWins' is assigned a value but never used.","'availableYears' is assigned a value but never used.","'setAvailableYears' is assigned a value but never used.","no-object-constructor",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [axiosPrivate, navigate]",{"range":"213","text":"214"},"Update the dependencies array to be: [auth?.accessToken, navigate, refresh]",{"range":"215","text":"216"},"Update the dependencies array to be: [axiosPrivate, columns, navigate, players.length]",{"range":"217","text":"218"},"Add dependencies array: []",{"range":"219","text":"220"},"Update the dependencies array to be: [calculateBottomColumn, calculateUpperColumn, focusEvent, inputType, onblurEvent, session]",{"range":"221","text":"222"},"Update the dependencies array to be: [axiosPrivate, joincode, navigate, sessionid]",{"range":"223","text":"224"},"Update the dependencies array to be: [request]",{"range":"225","text":"226"},"Update the dependencies array to be: [axiosPrivate, navigate, sessionId, winner]",{"range":"227","text":"228"},"Update the dependencies array to be: [axiosPrivate, navigate, sessionid]",{"range":"229","text":"230"},"Update the dependencies array to be: [finalScores, getPlayer, session?.List_PlayerOrder, showLastFinalScores]",{"range":"231","text":"232"},[1183,1185],"[axiosPrivate, navigate]",[657,659],"[auth?.accessToken, navigate, refresh]",[1771,1773],"[axiosPrivate, columns, navigate, players.length]",[2148,2148],", []",[2960,2969],"[calculateBottomColumn, calculateUpperColumn, focusEvent, inputType, onblurEvent, session]",[3705,3707],"[axiosPrivate, joincode, navigate, sessionid]",[1080,1082],"[request]",[1639,1641],"[axiosPrivate, navigate, sessionId, winner]",[2039,2041],"[axiosPrivate, navigate, sessionid]",[3170,3191],"[finalScores, getPlayer, session?.List_PlayerOrder, showLastFinalScores]"]